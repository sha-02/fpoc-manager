{% if control_plane == 'mp-bgp' %}
# BGP

{% if ipsec %}
# Vxlan-over-IPsec: the BGP peerings are built over the IPsec overlay IP addresses
# The IPsec overlay IP addresses are used also as VTEPs and BGP RIDs
    {% if id == 1 -%}
        {% if ipsec_design == 'site2site' -%}
            {% set neighbors = ['2.2.2.2'] -%}
        {% else %} {# other ipsec design: full-mesh, #}
            {% set neighbors = ['2.2.2.2', '3.3.3.3', '4.4.4.4'] -%}
        {% endif %}
    {% else -%} {# id = 2 since there is only id 1 and 2 for ipsec scenario #}
        {% set neighbors = ['1.1.1.1'] -%}
    {% endif %}
{% else %} {# no ipsec: plain vxlan #}
# plain Vxlan between FGT-A, FGT-B and FGT-C: BGP peerings are built over the underlay IP addresses
# The VTEP loopbacks (1.1.1.1, 2.2.2.2, 3.3.3.3) are announced via BGP IPv4 prefixes
# FGT-A is ipv4 and evpn route-reflector for FGT-B and FGT-C
# VTEPs IP are also used as BGP RIDs
    {% if id == 1 -%}
        {% set neighbors = [sites[2].ip, sites[3].ip, sites[4].ip] -%}
    {% else %} {# id 2 and 3 since there are 3 VTEPs for ipsec scenario #}
        {% set neighbors = [sites[1].ip] -%}
    {% endif %}
{% endif %}

config router bgp
    set as 65000
    set router-id {{id}}.{{id}}.{{id}}.{{id}}
    set keepalive-timer 15
    set holdtime-timer 45
    config neighbor
        {% for neighbor in neighbors %}
            edit "{{neighbor}}"
                set remote-as 65000
                set activate-evpn enable
                {{ "set interface ipsec" if ipsec_site2site }}
                {{ "set interface port1" if not ipsec }}
                {{ "set update-source lo-vxlan" if ipsec and not ipsec_site2site }}
                {{ "set route-reflector-client enable" if not ipsec_site2site and id == 1 }}
                {{ "set route-reflector-client-evpn enable" if not ipsec_site2site and id == 1 }}
                set advertisement-interval 1
                set connect-timer 1
                set soft-reconfiguration enable
                set soft-reconfiguration-evpn enable
            next
        {% endfor %}
    end
end

{% if not ipsec %}
# plain vxlan: announce the VTEP loopback IP@ as ipv4 family prefix
    config router bgp
        config network
            edit {{id}}
                set prefix {{id}}.{{id}}.{{id}}.{{id}} 255.255.255.255
            next
        end
    end
{% endif %}

{% if ipsec and ipsec_design == 'advpn' %}
# Since I'm using vxlan/bgp loopback with no continuity (1.1.1.1, 2.2.2.2, 3.3.3.3, 4.4.4.4) then it is needed
# for the Hub to advertise all these loopbacks down to the Spokes so that they know how to reach each others loopback
# This is done by redistributing the corresponding static IPsec routes (added via exchange-interface-ip) into BGP
    config router route-map
        edit "RM_vxlan_loopbacks"
            config rule
                edit 1
                    set match-interface "ipsec"
                    unset set-ip-prefsrc
                next
            end
        next
    end

    config router bgp
        config redistribute "static"
            set status enable
            set route-map "RM_vxlan_loopbacks"
        end
    end
{% endif %}

{% endif %} {# mp-bgp control-plane #}

