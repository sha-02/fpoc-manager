{% if FMG_FORTIGATE_ID %}
    {% import 'SETTINGS.DEVICES' as SETTINGS with context %}

    {% set dc_id = SETTINGS.DEVICES[FMG_FORTIGATE_ID].dc_id %}
    {% set cross_region_advpn = SETTINGS.DEVICES[FMG_FORTIGATE_ID].cross_region_advpn %}
    {% set FOS = SETTINGS.DEVICES[FMG_FORTIGATE_ID].FOS %}
    {% set region = SETTINGS.DEVICES[FMG_FORTIGATE_ID].region %}
    {% set bidir_sdwan = SETTINGS.DEVICES[FMG_FORTIGATE_ID].bidir_sdwan %}
{% endif %}


###############################################################################################################
# BGP peerings

{# Initialize variables outside of a 'if' block to avoid FMG creating metadata #}
{% set local_ASN = '' %}
{% set remote_ASN = '' %}
{% set neighbors = '' %}

###############################################################################################################
# BGP

# inter-DC is based on BGP on loopback (single peering over all overlays) which implies:
# - set ebgp-enforce-multihop enable
# - set update-source "lo-BGP-REGION"
# - set ebgp-multipath enable because there are multiple paths to reach the peer's loopback

# Edge = iBGP over each overlay
# - no BGP route reflection
# - no BGP Add-Path
# - Edge BGP is used Hub->Branch to announce the local DCs to their branches and to announce the corporte summary (10.0.0.0/14)
# - Edge BGP is used Branch->Hub to announce branch subnet and for bidirectional sdwan (Hub-side steering)

# - eBGP for cross-region peerings
# - a single BGP peering on loopback between two DCs over all overlays (INET1, INET2, MPLS)
# - Only local DCs prefixes are needed on a Branch (BR1/BR2 needs to know about DC1/DC2 ; BR3 needs to know about DC3)
# - Prefixes from other regions (edges and DCs) are aggregated under summary 10.0.0.0/14 which covers all LAN/DC subnets
#   summary 10.0.0.0/14 is advertised to edges via a BGP aggregate

{# Define which ASN is for local region and which ASN is for the remote region #}
# FOS >= 7.0: always eBGP for cross-region
{% if region == 'West' -%}
    {%- set local_ASN  = 65012 -%}
    {%- set remote_ASN = 65003 -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65003 -%}
    {%- set remote_ASN = 65012 -%}
{%- endif %}


config router bgp
    set as {{local_ASN}}
    set router-id 10.{{dc_id}}.0.1
    set ibgp-multipath enable
    set ebgp-multipath enable
    set keepalive-timer 10
    set holdtime-timer 30

    config aggregate-address
        edit 1
            set prefix 10.0.0.0 255.252.0.0
        next
    end

    config neighbor {##################################### inter-DC static neighbors #################################}
        {% if region == 'West' %}
            {% set neighbors = ['10.200.3.3'] %}
        {% else %}
            {% set neighbors = ['10.200.1.1', '10.200.2.2'] %}
        {% endif %}

        {% for neighbor in neighbors %}
        edit "{{neighbor}}"
            set remote-as {{remote_ASN}}
            set ebgp-enforce-multihop enable
            set update-source "lo-BGP-REGION"

            set advertisement-interval 1
            set link-down-failover enable
            set soft-reconfiguration enable
            set connect-timer 1

            set route-map-in "RM_REGION_IN"
            set route-map-out "RM_REGION_OUT"
        next
        {% endfor %}
    end
    config neighbor-group {#################################### Edge dynamic neighbors ##############################}
        {% set neighbors = [
            {'group': 'EDGE_INET1', 'interface': 'EDGE_INET1'},
            {'group': 'EDGE_INET2', 'interface': 'EDGE_INET2'},
            {'group': 'EDGE_MPLS', 'interface': 'EDGE_MPLS'},
            ]
        %}
        {% for neighbor in neighbors %}
            edit "{{neighbor.group}}"
                set interface "{{neighbor.interface}}"
                set update-source "{{neighbor.interface}}"
                set remote-as {{local_ASN}}

                set additional-path disable
                set route-reflector-client disable

                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable

                set route-map-out "RM_EDGE_OUT"
                {% if bidir_sdwan == 'route_tag' or bidir_sdwan == 'route_priority' %}
                    set route-map-in "routes_for_sdwan"
                {% endif %}
            next
        {% endfor %}
    end
    config neighbor-range
        edit 1
            set prefix 10.201.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET1"
        next
        edit 2
            set prefix 10.202.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET2"
        next
        edit 3
            set prefix 10.203.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_MPLS"
        next
    end
    config network
        edit 1
            set prefix 10.{{dc_id}}.0.0 255.255.255.0
        next
    end
end

#
# BGP routes
#

{# =========================================================================================================== #}
{% if dc_id == 1 %}
# FGT-W-DC1 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 01:17:26, [1/0]
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive is directly connected, EDGE_INET1), 00:48:39, [1/0]
#                     [200/0] via 10.202.1.1 (recursive is directly connected, EDGE_INET2), 00:48:39, [1/0]
#                     [200/0] via 10.203.1.1 (recursive is directly connected, EDGE_MPLS), 00:48:39, [1/0]
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive is directly connected, EDGE_INET1), 00:47:58, [1/0]
#                     [200/0] via 10.202.1.2 (recursive is directly connected, EDGE_INET2), 00:47:58, [1/0]
#                     [200/0] via 10.203.1.2 (recursive is directly connected, EDGE_MPLS), 00:47:58, [1/0]
# B       10.0.3.0/24 [20/0] via 10.200.3.3 (recursive via W1E3_MPLS tunnel 10.0.24.3 vrf 0), 01:17:19
#                                           (recursive via W1E3_INET1 tunnel 100.64.21.3 vrf 0), 01:17:19
#                                           (recursive via W1E3_INET2 tunnel 100.64.22.3 vrf 0), 01:17:19, [1/0]
# B       10.3.0.0/24 [20/0] via 10.200.3.3 (recursive via W1E3_MPLS tunnel 10.0.24.3 vrf 0), 01:17:19
#                                           (recursive via W1E3_INET1 tunnel 100.64.21.3 vrf 0), 01:17:19
#                                           (recursive via W1E3_INET2 tunnel 100.64.22.3 vrf 0), 01:17:19, [1/0]
{% endif %}

{% if dc_id == 2 %}
# FGT-W-DC2 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 01:17:57, [1/0]
# B       10.0.1.0/24 [200/0] via 10.201.2.1 (recursive is directly connected, EDGE_INET1), 00:49:11, [1/0]
#                     [200/0] via 10.202.2.1 (recursive is directly connected, EDGE_INET2), 00:49:11, [1/0]
#                     [200/0] via 10.203.2.1 (recursive is directly connected, EDGE_MPLS), 00:49:11, [1/0]
# B       10.0.2.0/24 [200/0] via 10.201.2.2 (recursive is directly connected, EDGE_INET1), 00:48:30, [1/0]
#                     [200/0] via 10.202.2.2 (recursive is directly connected, EDGE_INET2), 00:48:30, [1/0]
#                     [200/0] via 10.203.2.2 (recursive is directly connected, EDGE_MPLS), 00:48:30, [1/0]
# B       10.0.3.0/24 [20/0] via 10.200.3.3 (recursive via W2E3_MPLS tunnel 10.0.24.3 vrf 0), 01:17:51
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.3 vrf 0), 01:17:51
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.3 vrf 0), 01:17:51, [1/0]
# B       10.3.0.0/24 [20/0] via 10.200.3.3 (recursive via W2E3_MPLS tunnel 10.0.24.3 vrf 0), 01:17:51
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.3 vrf 0), 01:17:51
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.3 vrf 0), 01:17:51, [1/0]
{% endif %}

{% if dc_id == 3 %}
# FGT-E-DC3 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 01:18:47, [1/0]
# B       10.0.1.0/24 [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1 vrf 0), 00:50:01
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1 vrf 0), 00:50:01
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1 vrf 0), 00:50:01, [1/0]
#                     [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2 vrf 0), 00:50:01
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2 vrf 0), 00:50:01
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2 vrf 0), 00:50:01, [1/0]
# B       10.0.2.0/24 [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2 vrf 0), 00:49:20
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2 vrf 0), 00:49:20
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2 vrf 0), 00:49:20, [1/0]
#                     [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1 vrf 0), 00:49:20
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1 vrf 0), 00:49:20
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1 vrf 0), 00:49:20, [1/0]
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive is directly connected, EDGE_INET1), 01:18:29, [1/0]
#                     [200/0] via 10.202.3.1 (recursive is directly connected, EDGE_INET2), 01:18:29, [1/0]
#                     [200/0] via 10.203.3.1 (recursive is directly connected, EDGE_MPLS), 01:18:29, [1/0]
# B       10.1.0.0/24 [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1 vrf 0), 01:18:41
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1 vrf 0), 01:18:41
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1 vrf 0), 01:18:41, [1/0]
# B       10.2.0.0/24 [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2 vrf 0), 01:18:40
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2 vrf 0), 01:18:40
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2 vrf 0), 01:18:40, [1/0]
{% endif %}
