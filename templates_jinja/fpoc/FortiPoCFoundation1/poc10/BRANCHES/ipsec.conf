{% if FMG_FORTIGATE_ID %}
    {% import 'SETTINGS.DEVICES' as SETTINGS with context %}

    {% set branch_id = SETTINGS.DEVICES[FMG_FORTIGATE_ID].branch_id %}
    {% set datacenter = SETTINGS.DEVICES[FMG_FORTIGATE_ID].datacenter %}
    {% set region = SETTINGS.DEVICES[FMG_FORTIGATE_ID].region %}
    {% set FOS = SETTINGS.DEVICES[FMG_FORTIGATE_ID].FOS %}
    {% set vrf_aware_overlay = SETTINGS.DEVICES[FMG_FORTIGATE_ID].vrf_aware_overlay %}
{% endif %}

###############################################################################################################
# IPsec

{% set dc1 = '' %}  {# Initialize variables outside of a 'if' block to avoid FMG creating metadata #}
{% set dc2 = '' %}
{% set phase1s = '' %}

{% if region == 'West' -%}
    {%- set dc1 = datacenter.west.first.id -%}
    {%- set dc2 = datacenter.west.second.id -%}
    {%- set phase1s = [
        {   'name': 'H1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up'
        },
        {   'name': 'H1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up'
        },
        {   'name': 'H1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.first.mpls,
            'networkid': dc1~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up'
        },
        {   'name': 'H2_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up'
        },
        {   'name': 'H2_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up'
        },
        {   'name': 'H2_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.second.mpls,
            'networkid': dc2~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up'
        },
        ]
    -%}
    {# Full-mesh of tunnels between a branch and its Hub  -- not used for the time being
        {   'name': 'H1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
        {   'name': 'H2_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H2_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
    #}
{%- else -%} {# East region #}
    {%- set dc1 = datacenter.east.first.id -%}
    {%- set dc2 = datacenter.east.second.id -%}
    {%- set phase1s = [
        {   'name': 'H1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up'
        },
        {   'name': 'H1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up'
        },
        {   'name': 'H1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.east.first.mpls,
            'networkid': dc1~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up'
        },
        {   'name': 'H2_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.east.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up' if region == 'West' else 'down'
        },
        {   'name': 'H2_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.east.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up' if region == 'West' else 'down'
        },
        {   'name': 'H2_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.east.second.mpls,
            'networkid': dc2~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up' if region == 'West' else 'down'
        },
        ]
    -%}
    {# Full-mesh of tunnels between a branch and its Hub  -- not used for the time being
        {   'name': 'H1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
        {   'name': 'H2_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.east.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H2_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.east.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
    #}
{%- endif -%}

# localid on Branch is convenient since it is shown on IPsec monitor of DCs

{%- for phase1 in phase1s %}
    config vpn ipsec phase1-interface
        edit "{{phase1.name}}"
            set interface "{{phase1.interface}}"
            set ike-version 2
            set network-overlay enable
            set network-id {{phase1.networkid}}
            set peertype any
            set localid "{{phase1.localid}}"
            set net-device enable
            set auto-discovery-receiver enable
            set exchange-ip-addr4 10.200.{{region_id}}.{{branch_id}}
            set add-route disable
            set dpd on-idle
            set dpd-retryinterval 5
            set idle-timeout enable
            set idle-timeoutinterval 5
            set remote-gw {{phase1.remote_gw}}
            set psksecret {{phase1.networkid}}{{phase1.networkid}}{{phase1.networkid}}
            {% if vrf_aware_overlay and FOS >= 7_002_000 %}
                set encapsulation vpn-id-ipip
                set proposal aes128-sha256
                set dhgrp 19
            {% else %}
                set suite-b suite-b-gcm-128
            {% endif %}
        next
    end

    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set phase1name "{{phase1.name}}"
            set keepalive enable
            {% if vrf_aware_overlay and FOS >= 7_002_000 %}
                set proposal null-sha1 aes128gcm
            {% endif %}
        next
    end

    config system interface
        edit "{{phase1.name}}"
            set status {{phase1.status}}
        next
    end
{% endfor %}
