{% if FMG_FORTIGATE_ID %}
    {% import 'SETTINGS.DEVICES' as SETTINGS with context %}

    {% set branch_id = SETTINGS.DEVICES[FMG_FORTIGATE_ID].branch_id %}
    {% set datacenter = SETTINGS.DEVICES[FMG_FORTIGATE_ID].datacenter %}
    {% set region = SETTINGS.DEVICES[FMG_FORTIGATE_ID].region %}
    {% set FOS = SETTINGS.DEVICES[FMG_FORTIGATE_ID].FOS %}
    {% set vrf_aware_overlay = SETTINGS.DEVICES[FMG_FORTIGATE_ID].vrf_aware_overlay %}
    {% set multicast = SETTINGS.DEVICES[FMG_FORTIGATE_ID].multicast %}
    {% set overlay = SETTINGS.DEVICES[FMG_FORTIGATE_ID].overlay %}
    {% set loopback = SETTINGS.DEVICES[FMG_FORTIGATE_ID].loopback %}
{% endif %}

###############################################################################################################
# IPsec

{% set dc1 = '' %}  {# Initialize variables outside of a 'if' block to avoid FMG creating metadata #}
{% set dc2 = '' %}
{% set phase1s = '' %}
{% set overlay1 = '10.201' %}
{% set overlay2 = '10.202' %}
{% set overlay3 = '10.203' %}

{% if region == 'West' -%}
    {%- set dc1 = datacenter.west.first.id -%}
    {%- set dc2 = datacenter.west.second.id -%}
    {%- set phase1s = [
        {   'name': 'H1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up',
            'ip': overlay1~'.'~dc1~'.'~branch_id, 'remote_ip':overlay1~'.'~dc1~'.254',
        },
        {   'name': 'H1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up',
            'ip': overlay2~'.'~dc1~'.'~branch_id, 'remote_ip':overlay2~'.'~dc1~'.254',
        },
        {   'name': 'H1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.first.mpls,
            'networkid': dc1~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up',
            'ip': overlay3~'.'~dc1~'.'~branch_id, 'remote_ip':overlay3~'.'~dc1~'.254',
        },
        {   'name': 'H2_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up',
            'ip': overlay1~'.'~dc2~'.'~branch_id, 'remote_ip':overlay1~'.'~dc2~'.254',
        },
        {   'name': 'H2_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up',
            'ip': overlay2~'.'~dc2~'.'~branch_id, 'remote_ip':overlay2~'.'~dc2~'.254',
        },
        {   'name': 'H2_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.second.mpls,
            'networkid': dc2~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up',
            'ip': overlay3~'.'~dc2~'.'~branch_id, 'remote_ip':overlay3~'.'~dc2~'.254',
        },
        ]
    -%}
    {# Full-mesh of tunnels between a branch and its Hub  -- not used for the time being
        {   'name': 'H1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
        {   'name': 'H2_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H2_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
    #}
{%- else -%} {# East region #}
    {%- set dc1 = datacenter.east.first.id -%}
    {%- set dc2 = datacenter.east.second.id -%}
    {%- set phase1s = [
        {   'name': 'H1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'up',
            'ip': overlay1~'.'~dc1~'.'~branch_id, 'remote_ip':overlay1~'.'~dc1~'.254',
        },
        {   'name': 'H1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'up',
            'ip': overlay2~'.'~dc1~'.'~branch_id, 'remote_ip':overlay2~'.'~dc1~'.254',
        },
        {   'name': 'H1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.east.first.mpls,
            'networkid': dc1~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'up',
            'ip': overlay3~'.'~dc1~'.'~branch_id, 'remote_ip':overlay3~'.'~dc1~'.254',
        },
        {   'name': 'H2_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.east.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down',
            'ip': overlay1~'.'~dc2~'.'~branch_id, 'remote_ip':overlay1~'.'~dc2~'.254',
        },
        {   'name': 'H2_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.east.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down',
            'ip': overlay2~'.'~dc2~'.'~branch_id, 'remote_ip':overlay2~'.'~dc2~'.254',
        },
        {   'name': 'H2_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.east.second.mpls,
            'networkid': dc2~'3', 'localid': region|upper~'_BR'~branch_id~'_MPLS', 'status': 'down',
            'ip': overlay3~'.'~dc2~'.'~branch_id, 'remote_ip':overlay3~'.'~dc2~'.254',
        },
        ]
    -%}
    {# Full-mesh of tunnels between a branch and its Hub  -- not used for the time being
        {   'name': 'H1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet2,
            'networkid': dc1~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet1,
            'networkid': dc1~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
        {   'name': 'H2_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.east.second.inet2,
            'networkid': dc2~'2', 'localid': region|upper~'_BR'~branch_id~'_INET1', 'status': 'down'
        },
        {   'name': 'H2_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.east.second.inet1,
            'networkid': dc2~'1', 'localid': region|upper~'_BR'~branch_id~'_INET2', 'status': 'down'
        },
    #}
{%- endif -%}

# localid on Branch is convenient since it is shown on IPsec monitor of DCs

{% if multicast %}
# PIM does not bind to unnumbered interfaces: mode-cfg must be configured for IPsec tunnels
# "dependent" shortcuts are mandatory with mode-cfg overlays (0778974/0793117)
{% endif %}

# The local-out BGP session runs over a single overlay (not subject to SDWAN)
# 'Blackout failover' (this overlay goes down) is covered by having BGP hold-timer longer than DPD.
# DPD timers are much more important now, so that IKE can withdraw the loopback statics (exchange-ip-addrv4)
# When overlay goes down, BGP session is expected to switchover seamlessly, no problem, no flap

# The DPD timers on the Branch must be longer than the DPD timers on the Hub
# so that the Hub detects the failure first

# Recommandations for optimizing failover are:
# - BGP timers longer than DPD
# - DPD on Hub is on-idle
# - DPD on Hub must be shorter than DPD on Branch

{%- for phase1 in phase1s %}
    config vpn ipsec phase1-interface
        edit "{{phase1.name}}"
            set interface "{{phase1.interface}}"
            set ike-version 2
            set network-overlay enable
            set network-id {{phase1.networkid}}
            set peertype any
            set localid "{{phase1.localid}}"
            set net-device enable
            set auto-discovery-receiver enable
            set exchange-ip-addr4 {{loopback}}
            set add-route disable
            set dpd on-idle
            set dpd-retryinterval 5
            set idle-timeout enable
            set idle-timeoutinterval 5
            set remote-gw {{phase1.remote_gw}}
            set psksecret {{phase1.networkid}}{{phase1.networkid}}{{phase1.networkid}}
            {% if multicast and overlay == 'mode_cfg' %}
                set mode-cfg enable
                set auto-discovery-shortcuts dependent
            {% endif %}
            {% if vrf_aware_overlay and FOS >= 7_002_000 %}
                set encapsulation vpn-id-ipip
                set proposal aes128-sha256
                set dhgrp 19
            {% else %}
                set suite-b suite-b-gcm-128
            {% endif %}
        next
    end

    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set phase1name "{{phase1.name}}"
            set keepalive enable
            {% if vrf_aware_overlay and FOS >= 7_002_000 %}
                set proposal null-sha1 aes128gcm
            {% endif %}
        next
    end

    config system interface
        edit "{{phase1.name}}"
            set status {{phase1.status}}
            {% if multicast %}
                set allowaccess ping
                {% if overlay == 'static' %}
                  set ip {{phase1.ip}} 255.255.255.255
                  set remote-ip {{phase1.remote_ip}} 255.255.255.0
                {% endif %}
            {% endif %}
        next
    end
{% endfor %}
