{% if FMG_FORTIGATE_ID %}
    {% import 'SETTINGS.DEVICES' as SETTINGS with context %}

    {% set branch_id = SETTINGS.DEVICES[FMG_FORTIGATE_ID].branch_id %}
    {% set lan = SETTINGS.DEVICES[FMG_FORTIGATE_ID].lan %}
    {% set cross_region_advpn = SETTINGS.DEVICES[FMG_FORTIGATE_ID].cross_region_advpn %}
    {% set datacenter = SETTINGS.DEVICES[FMG_FORTIGATE_ID].datacenter %}
    {% set FOS = SETTINGS.DEVICES[FMG_FORTIGATE_ID].FOS %}
    {% set region = SETTINGS.DEVICES[FMG_FORTIGATE_ID].region %}
    {% set bidir_sdwan = SETTINGS.DEVICES[FMG_FORTIGATE_ID].bidir_sdwan %}
{% endif %}

{% set dc1 = '' %}  {# Initialize variables outside of a 'if' block to avoid FMG creating metadata #}
{% set dc2 = '' %}
{% set local_ASN = '' %}

###############################################################################################################
# BGP peerings over VPN overlays

{# Define which ASN is for local region and which ASN is for the remote region #}
# FOS >= 7.0: always eBGP for cross-region

{% if region == 'West' -%}
    {%- set local_ASN = 65001 -%}
    {%- set dc1 = datacenter.west.first.id -%}
    {%- set dc2 = datacenter.west.second.id -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65002 -%}
    {%- set dc1 = datacenter.east.first.id -%}
    {%- set dc2 = datacenter.east.second.id -%}
{%- endif -%}

config router route-map
    edit "H1_TAG"
        config rule
            edit 1
                set set-tag 1
            next
        end
    next
    edit "H2_TAG"
        config rule
            edit 1
                set set-tag 2
            next
        end
    next
end

config router bgp
    set as {{local_ASN}}
    set router-id 10.200.{{region_id}}.{{branch_id}}
    set keepalive-timer 15
    set holdtime-timer 45
    set ibgp-multipath enable

    set recursive-next-hop enable
    set tag-resolve-mode merge

    config neighbor
        edit "10.200.{{region_id}}.254"
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set remote-as {{local_ASN}}
            set route-map-in "H1_TAG"
            set connect-timer 1
            set advertisement-interval 1
            set soft-reconfiguration enable
        next
        edit "10.200.{{region_id}}.253"
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set remote-as {{local_ASN}}
            set route-map-in "H2_TAG"
            set connect-timer 1
            set advertisement-interval 1
            set soft-reconfiguration enable
        next
    end
    config network
        edit 1
            set prefix  {{lan.subnet}} {{lan.mask}}
        next
    end
end

#
# BGP routes
#

{% if branch_id == 1 and FOS >= 7_000_004 and cross_region_advpn %}
{% endif %}

{% if branch_id == 2 and FOS >= 7_000_004 and cross_region_advpn %}
{% endif %}

{% if branch_id == 3 and FOS >= 7_000_000 and cross_region_advpn %}
{% endif %}

{#============================================================================================================= #}

{% if branch_id == 1 and FOS >= 7_000_004 and not cross_region_advpn %}
{% endif %}

{% if branch_id == 2 and FOS >= 7_000_004 and not cross_region_advpn %}
{% endif %}

{% if branch_id == 3 and FOS >= 7_000_000 and not cross_region_advpn %}
{% endif %}
