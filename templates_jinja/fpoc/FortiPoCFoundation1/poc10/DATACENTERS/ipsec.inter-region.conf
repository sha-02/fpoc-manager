{% if FMG_FORTIGATE_ID %}
    {% import 'SETTINGS.DEVICES' as SETTINGS with context %}

    {% set dc_id = SETTINGS.DEVICES[FMG_FORTIGATE_ID].dc_id %}
    {% set datacenter = SETTINGS.DEVICES[FMG_FORTIGATE_ID].datacenter %}
    {% set FOS = SETTINGS.DEVICES[FMG_FORTIGATE_ID].FOS %}
    {% set region = SETTINGS.DEVICES[FMG_FORTIGATE_ID].region %}
    {% set cross_region_advpn = SETTINGS.DEVICES[FMG_FORTIGATE_ID].cross_region_advpn %}
{% endif %}

{% set phase1s = '' %} {# Initialize variables outside of a 'if' block to avoid FMG creating metadata #}

#
# Inter-Region tunnels
#

{% if region == 'West' %}
    {% set phase1s = [
        {   'name': 'EAST1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet1,
            'localid': 'WEST_DC'~dc_id~'_INET1', 'comment': 'Tunnel between WEST DC'~dc_id~' and EAST DC1 over INET1'
        },
        {   'name': 'EAST1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.east.first.inet2,
            'localid': 'WEST_DC'~dc_id~'_INET1', 'comment': 'Tunnel between WEST DC'~dc_id~' and EAST DC1 over INET1'
        },
        {   'name': 'EAST1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet2,
            'localid': 'WEST_DC'~dc_id~'_INET2', 'comment': 'Tunnel between WEST DC'~dc_id~' and EAST DC1 over INET2'
        },
        {   'name': 'EAST1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.east.first.inet1,
            'localid': 'WEST_DC'~dc_id~'_INET1', 'comment': 'Tunnel between WEST DC'~dc_id~' and EAST DC1 over INET2'
        },
        {   'name': 'EAST1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.east.first.mpls,
            'localid': 'WEST_DC'~dc_id~'_MPLS', 'comment': 'Tunnel between WEST DC'~dc_id~' and EAST DC1 over MPLS'
        },
        ]
    %}
{% else %} {# East region #}
    {% set phase1s = [
        {   'name': 'WEST1_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet1,
            'localid': 'EAST_DC1_INET1', 'comment': 'Tunnel between WEST DC1 and EAST DC1 over INET1'
        },
        {   'name': 'WEST1_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.first.inet2,
            'localid': 'EAST_DC1_INET1', 'comment': 'Tunnel between WEST DC1 and EAST DC1 over INET1'
        },
        {   'name': 'WEST1_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet2,
            'localid': 'EAST_DC1_INET2', 'comment': 'Tunnel between WEST DC1 and EAST DC1 over INET2'
        },
        {   'name': 'WEST1_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.first.inet1,
            'localid': 'EAST_DC1_INET2', 'comment': 'Tunnel between WEST DC1 and EAST DC1 over INET2'
        },
        {   'name': 'WEST1_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.first.mpls,
            'localid': 'EAST_DC1_MPLS', 'comment': 'Tunnel between WEST DC1 and EAST DC1 over MPLS'
        },
        {   'name': 'WEST2_INET1', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet1,
            'localid': 'EAST_DC1_INET1', 'comment': 'Tunnel between WEST DC2 and EAST DC1 over INET1'
        },
        {   'name': 'WEST2_INET1B', 'interface': 'Internet_1', 'remote_gw': datacenter.west.second.inet2,
            'localid': 'EAST_DC1_INET1', 'comment': 'Tunnel between WEST DC2 and EAST DC1 over INET1'
        },
        {   'name': 'WEST2_INET2', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet2,
            'localid': 'EAST_DC1_INET2', 'comment': 'Tunnel between WEST DC2 and EAST DC1 over INET2'
        },
        {   'name': 'WEST2_INET2B', 'interface': 'Internet_2', 'remote_gw': datacenter.west.second.inet1,
            'localid': 'EAST_DC1_INET2', 'comment': 'Tunnel between WEST DC2 and EAST DC1 over INET2'
        },
        {   'name': 'WEST2_MPLS', 'interface': 'MPLS', 'remote_gw': datacenter.west.second.mpls,
            'localid': 'EAST_DC1_MPLS', 'comment': 'Tunnel between WEST DC2 and EAST DC1 over MPLS'
        },
        ]
    %}
{% endif %}


##### WEST DC{{dc_id}} to EAST DC ######################
# localid is convenient since it is shown on IPsec monitor of Branch for cross-region branch-to-DC shortcut

{% for phase1 in phase1s %}
    config vpn ipsec phase1-interface
        edit "{{phase1.name}}"
            set type static
            set interface "{{phase1.interface}}"
            set ike-version 2
            set peertype any
            set localid "{{phase1.localid}}"
            set net-device disable
            {% if cross_region_advpn %}
                set auto-discovery-sender enable
                set auto-discovery-receiver enable
                set auto-discovery-forwarder enable
                set add-route disable
            {% else %}
                set exchange-interface-ip enable
            {% endif %}

            set exchange-ip-addr4 10.200.{{region_id}}.{{255-dc_id}}

            set dpd on-idle
            set dpd-retrycount 3
            set dpd-retryinterval 5
            set suite-b suite-b-gcm-128
            set psksecret fortinet
            set remote-gw {{phase1.remote_gw}}
            set comments "{{phase1.comment}}"
        next
    end

    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set phase1name "{{phase1.name}}"
            set keepalive enable
        next
    end
{% endfor %}
