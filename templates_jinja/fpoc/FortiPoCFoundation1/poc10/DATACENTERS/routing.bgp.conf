###############################################################################################################
# BGP peerings

{# Define which ASN is for local region and which ASN is for the remote region #}

{% if region == 'West' -%}
    {%- set local_ASN  = 65001 -%}
    {%- set remote_ASN = 65002 -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65002 -%}
    {%- set remote_ASN = 65001 -%}
{%- endif %}


# Tag-based resolution ('merge') is required with this design:
# (1) on DCs to which shortcuts can be established (branches from a remote region building shortcut to the DC),
#     in this PoC this scenario is only when cross_region_advpn is True
# (2) on DCs which can reach branches of a remote region via summary routes from multiple DCs of the remote region
#     in this PoC this is always True for EAST-DC1 because:
#     - without bgp_aggregation: regional loopback summaries are received from WEST-DC1/DC2
#     - with bgp_aggregation: regional LAN summaries are received from WEST-DC1/DC2
#     For WEST-DC1/DC2 this is never True because they connect to a single DC in EAST region
#
# For configuration simplification, tag-based resolution is always enabled on WEST-DC1/DC2, no attempt is made to only
# configure tag-based resolution when only cross_region_advpn is True

{% if bgp_aggregation %}
# Routes received from other regions (should be the region's summary) are marked as 'no-advertise' because they must
# not be re-advertised to Edges.
# Edges reach the remote regions via the corporate summary (10.0.0.0/8)
# Edges must also receive the subnets of their DCs (10.1.0.0/16 and 10.2.0.0/16 for West)
{% if bgp_route_reflection %}
# as well as the prefixes of the branches of their own region
{% endif %}
{% endif %}

config router route-map
    edit "H1_TAG"
        config rule
            edit 1
                set set-tag 1
                {{ "set set-community no-advertise" if bgp_aggregation }}
                set action permit
            next
        end
    next
    edit "H2_TAG"
        config rule
            edit 1
                set set-tag 2
                {{ "set set-community no-advertise" if bgp_aggregation }}
                set action permit
            next
        end
    next
end

config router bgp
    set as {{local_ASN}}
    set router-id {{loopback}}
    set keepalive-timer 15
    set holdtime-timer 45
    set ibgp-multipath enable
    set ebgp-multipath enable

    set recursive-next-hop enable
    set tag-resolve-mode merge

    {% if bidir_sdwan == 'remote_sla' %}
        set recursive-inherit-priority enable
    {% endif %}

    {% if bgp_aggregation %}
# Aggregate prefixes needed in the BGP table:
# - regional LAN summary (eg, 10.0.0.0/14 for WEST) to advertise to other regions only
# - corporate LAN summary (10.0.0.0/8) to advertise to Edges only
# since 10/14 and 10/8 overlap then summary-only is disabled. We just want the corresponding summary prefixes in the BGP table
        {% if bgp_route_reflection %}
# - regional loopback summary (10.200.1.0/24) to advertise to edges only (summary-only, suppress the loopback itself)
        {% endif %}
        config aggregate-address
            edit 1
                {% if region == 'West' %}
                    set prefix 10.0.0.0/14
                {% else %}
                    set prefix 10.4.0.0/14
                {% endif %}
                set summary-only disable
            next
            edit 2
                set prefix 10.0.0.0 255.0.0.0
                set as-set disable
                set summary-only disable
            next
            {% if bgp_route_reflection %}
                edit 3
                    set prefix 10.200.{{region_id}}.0 255.255.255.0
                    set as-set disable
                    set summary-only enable
                next
            {% endif %}
        end
    {% endif -%}

    config neighbor
        {% if region == 'West' -%}
            {% set neighbors = [ {'ip': '10.200.2.254', 'RM_in':'H1_TAG'} ] %}
        {% else %}
            {% set neighbors = [ {'ip': '10.200.1.254', 'RM_in':'H1_TAG'}, {'ip': '10.200.1.253', 'RM_in':'H2_TAG'}] %}
        {% endif -%}

        {% for neighbor in neighbors -%}
        edit "{{neighbor.ip}}"
            set remote-as {{remote_ASN}}
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set ebgp-enforce-multihop enable

            {% if shortcut_routing == 'exchange_ip' and cross_region_advpn %}
                # Preserve next-hop for ADVPN
                set attribute-unchanged next-hop
            {% endif %}

            set advertisement-interval 1
            set link-down-failover enable
            set soft-reconfiguration enable
            set connect-timer 1

            set route-map-in "{{neighbor.RM_in}}"
            set route-map-out "REGION_OUT"
        next
        {% endfor %}
    end

    config neighbor-group
        edit "EDGE"
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set remote-as {{local_ASN}}
            {{ "set route-reflector-client enable" if bgp_route_reflection }}
            set advertisement-interval 1
            set soft-reconfiguration enable

            set route-map-out "EDGE_OUT"
            {{ "set next-hop-self enable" if bgp_aggregation }}
        next
    end
    config neighbor-range
        edit 1
            set prefix 10.200.{{region_id}}.0 255.255.255.0
            set neighbor-group "EDGE"
        next
    end

    config network
        edit 1
            set prefix {{lan.subnet}} {{lan.mask}}
        next
        {% if bgp_aggregation and bgp_route_reflection %} {# route-reflection for local region + summary for remote regions #}
            # loopback address needed in BGP table to generate regional loopback summary (eg, 10.200.1.0/24)
            edit 2
                set prefix {{loopback}} 255.255.255.255
            next
        {% endif %}
        {% if not bgp_aggregation %}
            # the global loopback summary is advertised to edges but it is not advertised to other regions
            # this summary is created with a static blackhole route
            edit 102
                set prefix 10.200.0.0 255.255.0.0
                set route-map "LOCAL_REGION_ONLY"
            next
            # send regional loopback summary to peering regions
            # this summary is created with a static blackhole route
            edit 103
                set prefix 10.200.{{region_id}}.0 255.255.255.0
            next
        {% endif %}
    end
end
