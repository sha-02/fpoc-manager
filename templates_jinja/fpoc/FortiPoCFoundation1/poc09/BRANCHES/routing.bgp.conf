###############################################################################################################
# BGP peerings over VPN overlays

{% if shortcut_routing == 'ipsec_selectors' %}  {# poc 7 'ADVPN with IPsec selectors' #}
# iBGP between a Branch and its DC
# Edge BGP is used to:
# - learn the local DCs subnet (e.g. BR1/BR2 to learn DC1 and DC2 subnets ; BR3 to learn DC3 subnet)
# - learn a corporate summary (10.0.0.0/14) which covers all subnets
#    . of other branches (within same region or from other region)
#    . DCs from other regions
# - signal SLA status to the Hub (bidirectional sdwan: Hub-side steering)
{% endif %}

{# Define which ASN is for local region and which ASN is for the remote region #}
# FOS >= 7.0: always eBGP for cross-region
{%- if region == 'West' -%}
    {%- set local_ASN = 65012 -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65003 -%}
{%- endif %}

{# Define the dc-id #}
{% set dc1 = datacenter.first -%}
{% set dc2 = datacenter.second -%}

{# BGP neighbors #}
{% set neighbors = [
    {'ip': '10.201.'~dc1.id~'.254', 'interface': 'H1_INET1'},
    {'ip': '10.202.'~dc1.id~'.254', 'interface': 'H1_INET2'},
    {'ip': '10.203.'~dc1.id~'.254', 'interface': 'H1_MPLS'},
    {'ip': '10.201.'~dc2.id~'.254', 'interface': 'H2_INET1'},
    {'ip': '10.202.'~dc2.id~'.254', 'interface': 'H2_INET2'},
    {'ip': '10.203.'~dc2.id~'.254', 'interface': 'H2_MPLS'},
    ]
%}

{% if bidir_sdwan == 'route_tag' or bidir_sdwan == 'route_priority' %}
#
# Bi-directional SD-WAN (Hub-side Steering)
#
    config router route-map
        edit "SLA_OK"
            config rule
                edit 1
                    set set-community "{{local_ASN}}:1"
                next
            end
        next
        edit "SLA_NOK"
            config rule
                edit 1
                    set set-community "{{local_ASN}}:2"
                next
            end
        next
    end
{% endif %}

config router bgp
    set as {{local_ASN}}
    set router-id 10.0.{{branch_id}}.1
    set keepalive-timer 10
    set holdtime-timer 30
    set ibgp-multipath enable

    {% if shortcut_routing == 'ipsec_selectors' %}  {# poc 7 'ADVPN with IPsec selectors' #}
      set recursive-next-hop disable
    {% else %}  {# PoC 9 ADVPN with BGP RR #}
      set recursive-next-hop enable
    {% endif %}

    config neighbor
        {% for neighbor in neighbors %}
            edit "{{neighbor.ip}}"
                set interface "{{neighbor.interface}}"
                set remote-as {{local_ASN}}

                {% if shortcut_routing == 'ipsec_selectors' %}  {# poc 7 'ADVPN with IPsec selectors' #}
                  set additional-path disable
                {% else %}  {# PoC 9 ADVPN with BGP RR #}
                  set additional-path receive
                {% endif %}

                set connect-timer 1
                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable
            next
        {% endfor %}
    end
    config network
        edit 1
            set prefix 10.0.{{branch_id}}.0 255.255.255.0
        next
    end
end

{% if bidir_sdwan == 'route_tag' or bidir_sdwan == 'route_priority' %}
    config router bgp
        config neighbor
            {% for neighbor in neighbors %}
                edit "{{neighbor.ip}}"
                    set route-map-out "SLA_NOK"
                    set route-map-out-preferable "SLA_OK"
                next
            {% endfor %}
        end
    end
{% endif %}
