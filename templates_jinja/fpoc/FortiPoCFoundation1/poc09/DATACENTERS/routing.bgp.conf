###############################################################################################################
# BGP peerings

{# Define which ASN is for local region and which ASN is for the remote region #}
# FOS >= 7.0: always eBGP for cross-region
{% if region == 'West' -%}
    {%- set local_ASN  = 65012 -%}
    {%- set remote_ASN = 65003 -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65003 -%}
    {%- set remote_ASN = 65012 -%}
{%- endif %}

{% if cross_region_advpn -%}
{%- if region == 'West' -%}
# "additional-path-select 3" because
# - each Branch advertise its subnet with up to 3 different BGP NH
# - there are 3 overlays with DC3
{%- else -%} {# East region #}
# "additional-path-select 6" because
# - each Branch advertise its subnet with up to 3 different BGP NH
# - but there are 6 overlays with DC1/DC2: 6 different BGP NH can be received from BR1/BR2 via DC1/DC2
# The 6 BGP NH of BR1/BR2 must be sent to BR3 via each overlay. Hence "set adv-additional-path 6" for the edge peering
{%- endif -%}
{%- else -%}
# "additional-path-select 3" because each Branch advertise its subnet with up to 3 different BGP NH
# No need for BGP NH preservation over inter-region peerings since there is no cross-region shortcut
{%- endif %}


config router bgp
    set as {{local_ASN}}
    set router-id 10.{{dc_id}}.0.1
    set ibgp-multipath enable
    set additional-path enable
    set keepalive-timer 10
    set holdtime-timer 30
    {% if bidir_sdwan == 'remote_sla' %}
        set recursive-inherit-priority enable
    {% endif %}

    {% if region == 'East' and cross_region_advpn %}
        set additional-path-select 6
    {% else %}
        set additional-path-select 3
    {% endif %}

    {% if cross_region_advpn %}
        set ebgp-multipath enable
        set recursive-next-hop enable
        config aggregate-address
            edit 1
                set prefix 10.201.0.0 255.255.0.0
                set summary-only disable
            next
            edit 2
                set prefix 10.202.0.0 255.255.0.0
                set summary-only disable
            next
            edit 3
                set prefix 10.203.0.0 255.255.0.0
                set summary-only disable
            next
            edit 4
                set prefix 10.200.0.0 255.252.0.0
                set summary-only disable
            next
        end
    {% endif %}

    {% if not cross_region_advpn %}
        set ebgp-multipath enable
            config aggregate-address
                edit 1
                    set prefix 10.0.0.0 255.252.0.0
                next
                edit 2
                    set prefix 10.200.0.0 255.252.0.0
                    set summary-only enable
                next
            end
    {% endif %}
    config neighbor {########################################## inter-DC static neighbors #################################}
        {% if not cross_region_advpn %} {# bgp-on-loopback for inter-regional tunnels #}
            {% if region == 'West' %}
                {% set neighbors = ['10.200.3.3'] %}
            {% else %}
                {% set neighbors = ['10.200.1.1', '10.200.2.2'] %}
            {% endif %}

            {% for neighbor in neighbors %}
            edit "{{neighbor}}"
                set remote-as {{remote_ASN}}
                set ebgp-enforce-multihop enable
                set update-source "lo-BGP-REGION"

                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable
                set connect-timer 1

                set route-map-in "RM_REGION_IN"
                set route-map-out "RM_REGION_OUT"
            next
            {% endfor %}
        {% else %} {# with cross regional shortcut: bgp-per-overlay for inter-regional tunnels #}
            {% if region == 'West' %}
                {% set neighbors = [
                    {'ip': '10.201.'~dc_id~'3.2', 'interface': 'EAST_DC3_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.'~dc_id~'3.2', 'interface': 'EAST_DC3_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.'~dc_id~'3.2', 'interface': 'EAST_DC3_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    ]
                %}
            {% else %} {# East #}
                {% set neighbors = [
                    {'ip': '10.201.13.1', 'interface': 'WEST_DC1_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.13.1', 'interface': 'WEST_DC1_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.13.1', 'interface': 'WEST_DC1_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    {'ip': '10.201.23.1', 'interface': 'WEST_DC2_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.23.1', 'interface': 'WEST_DC2_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.23.1', 'interface': 'WEST_DC2_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    ]
                %}
            {% endif %}
            {% for neighbor in neighbors %}
                 edit {{neighbor.ip}}
                    set interface "{{neighbor.interface}}"
                    set remote-as {{remote_ASN}}

                    set attribute-unchanged next-hop
                    set ebgp-enforce-multihop enable

                    set advertisement-interval 1
                    set link-down-failover enable
                    set soft-reconfiguration enable
                    set connect-timer 1

                    set additional-path both
                    {% if region == 'East' %}
                        set adv-additional-path 6
                    {% else %}
                        set adv-additional-path 3
                    {% endif %}
                    set route-map-out "{{neighbor.route_map}}"
                next
            {% endfor %}
        {% endif %}
    end
    config neighbor-group {########################################## Edge dynamic neighbors ##############################}
        {% set neighbors = [
            {'group': 'EDGE_INET1', 'interface': 'EDGE_INET1', 'route_map': 'RM_EDGE_INET1_OUT'},
            {'group': 'EDGE_INET2', 'interface': 'EDGE_INET2', 'route_map': 'RM_EDGE_INET2_OUT'},
            {'group': 'EDGE_MPLS', 'interface': 'EDGE_MPLS', 'route_map': 'RM_EDGE_MPLS_OUT'},
            ]
        %}
        {% for neighbor in neighbors %}
            edit "{{neighbor.group}}"
                set interface "{{neighbor.interface}}"
                set update-source "{{neighbor.interface}}"
                set remote-as {{local_ASN}}
                set additional-path send

                {% if region == 'East' and cross_region_advpn %}
                    set adv-additional-path 6
                {% else %}
                    set adv-additional-path 3
                {% endif %}

                set route-reflector-client enable
                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable

                {% if cross_region_advpn %}
                    set route-map-out "{{neighbor.route_map}}"
                {% else %} {# no cross-region shortcuts #}
                    set route-map-out "RM_EDGE_OUT"
                {% endif %}

                {% if bidir_sdwan == 'route_tag' or bidir_sdwan == 'route_priority' %}
                    set route-map-in "RM_EDGE_SDWAN"
                {% endif %}
            next
        {% endfor %}
    end
    config neighbor-range
        edit 1
            set prefix 10.201.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET1"
        next
        edit 2
            set prefix 10.202.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET2"
        next
        edit 3
            set prefix 10.203.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_MPLS"
        next
    end
    config network
        edit 1
            set prefix 10.{{dc_id}}.0.0 255.255.255.0
            {% if cross_region_advpn %}
                set route-map "RM_LOCAL_TAG"
            {% endif %}
        next
        edit 2
            set prefix 10.201.{{dc_id}}.0 255.255.255.0
            {% if bidir_sdwan == 'remote_sla' %}
              # The overlay IP of the Hub is a /32 when using 'remote_sla' (e.g. 'set ip 10.201.1.254/32')
              # so we need to force the /24 subnet (e.g. 10.201.1.0/24) into the BGP table because it is needed for
              # the aggregate command to advertise the cross-regional summary (e.g. 10.201.0.0/16) to the Branches
              set network-import-check disable
            {% endif %}
        next
        edit 3
            set prefix 10.202.{{dc_id}}.0 255.255.255.0
            {% if bidir_sdwan == 'remote_sla' %}
              set network-import-check disable
            {% endif %}
        next
        edit 4
            set prefix 10.203.{{dc_id}}.0 255.255.255.0
            {% if bidir_sdwan == 'remote_sla' %}
              set network-import-check disable
            {% endif %}
        next
    end
end
