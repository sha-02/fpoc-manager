{% if not bgp_route_reflection %} {# no advpn or advpn routing from IPsec selectors or dynamic BGP peering #}
# CONTEXT:
# - no BGP route reflection on the Hub
# - no BGP AddPath
# - Edge BGP is used Hub->Branch to announce the local DCs to their branches and to announce the corporte summary (10.0.0.0/14)
# - Edge BGP is used Branch->Hub to announce branch subnet and for bidirectional sdwan (Hub-side steering)

# inter-region is based on eBGP on loopback which implies:
# - a single BGP peering on loopback between two DCs over all overlays (INET1, INET2, MPLS)
# - set ebgp-enforce-multihop enable
# - set update-source "lo-BGP"
# - set ebgp-multipath enable because there are multiple paths to reach the peer's loopback
# - Only local DCs prefixes are needed on a Branch (BR1/BR2 needs to know about DC1/DC2 ; BR3 needs to know about DC3)
# - Prefixes from other regions (edges and DCs) are aggregated under summary 10.0.0.0/14 which covers all LAN/DC subnets
#   summary 10.0.0.0/14 is advertised to edges via a BGP aggregate

{%if shortcut_routing == 'ipsec_selectors' %}
#
# ADVPN based off IPsec selectors allows routing for (intra-region and inter-region) branch-to-branch traffic
# to converge over the shortcut
#
# *******************************
# *** inter-region LIMITATION ***
# *******************************
#
# Inter-regional Branch-to-HUB traffic will create a shortcut Branch-to-RemoteRegionHub but traffic will continue passing
# through the Hubs.
# Let's take PC-WEST-BR1--WEST-BR1===WEST-DC1===EAST-DC3--PC-EAST-DC3 as an example
#
# This is because the shortcut tunnel is created against the Hub-to-Hub static phase1 on EAST-DC3
# The corresponding phase2 is configured with wildcard selectors (any/any)
# The inter-regional Hub-to-Hub tunnel between WEST-DC1-EAST-DC3 is supposed to carry all inter-regional traffic
# so its selectors are not narrowed.
# It implies that when WEST-BR1 creates a shortcut with EAST-BR3 the following happens:
# - the shortcut tunnel is created
# - a default-route with a distance of 15 is created by IKE on WEST-BR1 because of 0.0.0.0/0 selector on EAST-BR3
# - this default-route is inactive because it is hidden by the SD-WAN default-route which has a distance of 1
# - since there is no active route over the shortcut then WEST-BR1 continue sending the traffic for EAST-DC3 over its own Hub
{% endif %} {# ADVPN with IPsec selectors #}

#
# Prefix lists
#

config router prefix-list
    edit "PFL_corporate_aggregate"
        config rule
            edit 1
                set prefix 10.0.0.0 255.252.0.0
                unset ge
                unset le
            next
        end
    next
end

# Route-maps
#

# Ideally the Hub/DC of a region should advertise a summary for its whole region to other regions.
# For e.g., DC3 would get a summary for West region from DC1 and DC2. Then DC3 would pass this summary to its edges
# Here, the address plan does not allow to summarize West region and East region without overlap.
# That's what might happen as well on real networks with no nice-and-clean summarizable IP plan.
# So, here, DC1/DC2 send all there edge subnets to DC3 which summarize them in a big 10.0.0.0/14 summary which is the
# "corporate summary" which encompasses all corporate subnets of all regions.
# This corporate summary routes 10.0.0.0/14 must not be advertised to other regions

# Routes learned from East region (DC3 10.3.0.0/24, BR3 10.0.3.0/24) must not be advertised to West Edges.
# Only the corporate summary (10.0.0.0/14) is sent to West branches.
# Branches of one region do not need to know details about other regions
# 'tag 666' is used to mark routes received from another region. Routes with this tag are not advertised to local edges

config router route-map
    edit "RM_REGION_IN"
        config rule
            edit 1
                set set-tag 666
            next
        end
    next
    edit "RM_EDGE_OUT"
        config rule
            edit 1
                set action deny
                set match-tag 666
            next
            edit 2
            next
        end
    next
    edit "RM_REGION_OUT"
        config rule
            edit 1
                set action deny
                set match-ip-address "PFL_corporate_aggregate"
            next
            edit 2
            next
        end
    next
end

{# Define which ASN is for local region and which ASN is for the remote region #}
# FOS >= 7.0: always eBGP for cross-region
{% if region == 'West' -%}
    {%- set local_ASN  = 65012 -%}
    {%- set remote_ASN = 65003 -%}
{%- else -%} {# East region #}
    {%- set local_ASN = 65003 -%}
    {%- set remote_ASN = 65012 -%}
{%- endif %}

{% if region == 'West' %}
    {% set neighbors = ['10.200.2.254'] %}
{% else %}
    {% set neighbors = ['10.200.1.254', '10.200.1.253'] %}
{% endif %}

{% set neighbor_groups = [
    {'group': 'EDGE_INET1', 'interface': 'EDGE_INET1'},
    {'group': 'EDGE_INET2', 'interface': 'EDGE_INET2'},
    {'group': 'EDGE_MPLS', 'interface': 'EDGE_MPLS'},
    ]
%}

config router bgp
    config aggregate-address
        edit 1
            set prefix 10.0.0.0 255.252.0.0
        next
    end

    config neighbor {##################################### inter-DC static neighbors #################################}
    {% for neighbor in neighbors %}
        edit "{{neighbor}}"
            set remote-as {{remote_ASN}}
            set ebgp-enforce-multihop enable
            set update-source "lo-BGP"

            set advertisement-interval 1
            set link-down-failover enable
            set soft-reconfiguration enable
            set connect-timer 1

            set route-map-in "RM_REGION_IN"
            set route-map-out "RM_REGION_OUT"
        next
    {% endfor %}
    end
    config neighbor-group {#################################### Edge dynamic neighbors ##############################}
    {% for neighbor in neighbor_groups %}
        edit "{{neighbor.group}}"
            set additional-path disable
            set route-reflector-client disable
            set route-map-out "RM_EDGE_OUT"
        next
    {% endfor %}
    end
end

{% endif %} {# not bgp_route_reflection #}