###############################################################################################################
# SD-WAN

# 'set hold-down-time 20' to prevent falling back to most-preferred shortcut before measuring its quality
#
# 'set tie-break fib-best-match' to select path with best-route to another shortcut instead of
# going back to feasible routes via Hub

##### SD-WAN zones -----------------------------------------------

config system sdwan
    set status enable
    config zone
        edit "internet"
        next
        edit "overlay"
        next
        {% if vrf_aware_overlay and direct_internet_access %}
            edit "vrf_internet"
            next
        {% endif %}
    end
end

##### SD-WAN members -----------------------------------------------

{% set _OLD__ipsec_overlays = [
    {'id': 111, 'interface': 'H1_INET1', 'cross_underlay': false, 'status': 'enable'},
    {'id': 122, 'interface': 'H1_INET2', 'cross_underlay': false, 'status': 'enable'},
    {'id': 133, 'interface': 'H1_MPLS', 'cross_underlay': false, 'status': 'enable'},
    {'id': 211, 'interface': 'H2_INET1', 'cross_underlay': false, 'status': 'enable' if region == 'West' else 'disable' },
    {'id': 222, 'interface': 'H2_INET2', 'cross_underlay': false, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 233, 'interface': 'H2_MPLS', 'cross_underlay': false, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 112, 'interface': 'H1_INET1X2', 'cross_underlay': true, 'status': 'enable'},
    {'id': 121, 'interface': 'H1_INET2X1', 'cross_underlay': true, 'status': 'enable'},
    {'id': 212, 'interface': 'H2_INET1X2', 'cross_underlay': true, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 221, 'interface': 'H2_INET2X1', 'cross_underlay': true, 'status': 'enable' if region == 'West' else 'disable'},
    ]
-%}

{% set ipsec_overlays = [
    {'id': 11, 'interface': 'H1_INET', 'cross_underlay': false, 'status': 'enable'},
    {'id': 13, 'interface': 'H1_MPLS', 'cross_underlay': false, 'status': 'enable'},
    ]
-%}

config system sdwan
    config members

        # Underlays
        edit 1
            set interface "Internet_1"
            set zone "internet"
            {# set gateway {{wan.inet1.subnet}}.254 #}
        next
#         edit 2
#             set interface "Internet_2"
#             set zone "internet"
#             {# set gateway {{wan.inet2.subnet}}.254 #}
#         next

        # Overlays
        {% for member in ipsec_overlays %}
        {% if member.cross_underlay and not full_mesh_ipsec %}
            {% continue %}
        {% endif %}
        edit {{member.id}}
            set interface "{{member.interface}}"
            set zone "overlay"
            set source {{loopback}}
            set priority 10
            set status {{member.status}}
        next
        {% endfor %}
    end
end

{% if vrf_aware_overlay and direct_internet_access %}
  # Internet DIA over the inter-vrf links from the LAN VRFs
    config system sdwan
        config members
        {% for name in inter_segments.keys() %}
            edit "{{30+loop.index0}}"
                set interface "{{name}}1"
                set zone "vrf_internet"
            next
        {% endfor %}
        end
    end
{% endif %}


### SD-WAN health-checks -----------------------------------------------

{# Build the list of SLA members for each health-check #}
{% set sla_dc_members = [] -%} {# Must contain all overlay tunnels #}
{% set sla_internet_members = [] -%}  {# Must contain Tunnels (for RIA) and possibly Internet underlays (if DIA) #}
{% for ov in ipsec_overlays -%}
    {% if ov.cross_underlay and not full_mesh_ipsec -%}
        {% continue %}
    {% endif -%}

    {% do sla_dc_members.append(ov.id) -%}
    {% do sla_internet_members.append(ov.id) -%}
{% endfor -%}

{% if vrf_aware_overlay and direct_internet_access -%}
    {% do sla_internet_members.append(1) -%}
    {% for _ in inter_segments.keys() -%} {# Add inter-vrf links to SLA_Internet #}
        {% do sla_internet_members.append(30+loop.index0) -%}
    {% endfor -%}
{% endif -%}

config system sdwan
    config health-check
        edit "SLA_DataCenters"
            set server 10.200.99.{{region_id}}
            set sla-fail-log-period 10
            set sla-pass-log-period 10
            set mos-codec g729
            set probe-timeout 1000
            set members {{ sla_dc_members|join(' ') }}
            {% if bidir_sdwan == 'remote_sla' %}
                set embed-measured-health enable
            {% endif %}
            config sla
                edit 1
                    set link-cost-factor latency packet-loss
                    set latency-threshold 150
                    set packetloss-threshold 1
                next
                edit 2
                    set link-cost-factor mos
                    set mos-threshold "4.0"
                next
            end
        next
        edit "SLA_Internet"
            set server "198.18.8.8"
            set sla-fail-log-period 10
            set sla-pass-log-period 10
            set probe-timeout 1000

#             {% if remote_internet == 'none' %}
#                 set members 1 2
#             {% endif %}
#             {% if remote_internet == 'mpls' %}
#                 set members 1 2 133 233
#             {% endif %}
#             {% if remote_internet == 'all' %}
#                 set members 1 2 111 122 133 211 222 233
#             {% endif %}
            set members {{ sla_internet_members|join(' ') }}

            config sla
                edit 1
#                    set latency-threshold 150
#                    set jitter-threshold 30
#                    set packetloss-threshold 2
#                next
#                edit 2
                    set latency-threshold 300
                    set jitter-threshold 50
                    set packetloss-threshold 5
                next
            end
        next
    end
end

### SD-WAN rules -----------------------------------------------

config system sdwan
    config service
        edit 8
            set name "VoiP_MOS"
            set mode sla
            set protocol 17
            set start-port 5061
            set end-port 5061
            set dst "Corporate"
            set src "Corporate"
            set hold-down-time 20
            config sla
                edit "SLA_DataCenters"
                    set id 2
                next
            end
#             set priority-members 133 111 122 233 211 222
            set priority-members 13 11
            set tie-break fib-best-match
            {% if FOS == 7_004_000 %}
                # SD-WAN service rule stickiness for ADVPN routes
                set shortcut-stickiness enable
            {% endif %}
            {% if FOS >= 7_004_001 %}
                #  Traffic remains in the original session path if the path is within the SLA
                set sla-stickiness enable
            {% endif %}
        next
        edit 1
            set name "DC_Services"
            set mode priority
            set src "Corporate"
            set internet-service enable
            set internet-service-custom "DC.Services"
            set health-check "SLA_DataCenters"
#             set priority-members 111 122 133 211 222 233
            set priority-members 11 13
            set link-cost-factor custom-profile-1
            set packet-loss-weight 95
            set latency-weight 5

            set hold-down-time 10
            set tie-break fib-best-match
        next
        edit 2
            set name "DC_Services_MaxBW"
            set mode load-balance
            set src "Corporate"
            set internet-service enable
            set internet-service-app-ctrl 7932 7931 7930
            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
#             set priority-members 111 122
            set priority-members 11 13
            set status disable
        next
        edit 3
#             set name "Corporate_via_first_DC"
            set name "Corporate"
            set mode sla
            set dst "Corporate"
            set src "Corporate"

            set hold-down-time 20
            set tie-break fib-best-match

            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
#             set priority-members 111 122 133
            set priority-members 11 13
        next
#         edit 4
#             set name "Corporate_via_second_DC"
#             set mode sla
#             set dst "Corporate"
#             set src "Corporate"
#
#             set hold-down-time 20
#             set tie-break fib-best-match
#
#             config sla
#                 edit "SLA_DataCenters"
#                     set id 1
#                 next
#             end
#             set priority-members 211 222 233
#         next
        edit 5
#            set name "Internet_HighPriority"
            set name "Internet"
            set mode sla
            set src "Corporate"
            set dst "all"
#            set internet-service enable
#            set internet-service-app-ctrl 16354 42635 43541
            config sla
                edit "SLA_Internet"
#                    set id 2
                    set id 1
                next
            end
#             {% if remote_internet == 'none' %}
#                 set priority-members 1 2
#             {% endif %}
#             {% if remote_internet == 'mpls' %}
#                 set priority-members 1 133 233 2
#             {% endif %}
#             {% if remote_internet == 'all' %}
#                 set priority-members 111 122 133 211 222 233 1 2
#             {% endif %}
              {% if vrf_aware_overlay and direct_internet_access %}
                  set priority-members 11 13 1 30 31 32
              {% elif direct_internet_access %}
                  set priority-members 11 13 1
              {% else %} {# no direct internet access DIA, only RIA #}
                  set priority-members 11 13
              {% endif %}
        next
#         edit 6
#             set name "Internet_MedPriority"
#             set mode sla
#             set src "Corporate"
#             set internet-service enable
#             set internet-service-app-ctrl 33182 41468 16920
#             config sla
#                 edit "SLA_Internet"
#                     set id 2
#                 next
#             end
#             {% if remote_internet == 'none' %}
#                 set priority-members 1 2
#             {% endif %}
#             {% if remote_internet == 'mpls' %}
#                 set priority-members 1 2 133 233
#             {% endif %}
#             {% if remote_internet == 'all' %}
#                 set priority-members 111 122 133 211 222 233 1 2
#             {% endif %}
#             set priority-members 1 13
#         next
#         edit 7
#             set name "Internet_LowPriority"
#             set mode manual
#             set src "Corporate"
#             set dst "all"
#             set priority-members 2 1
#             set priority-members 1
#         next
    end
end

{% if vrf_aware_overlay and direct_internet_access %}
# Policy route for the SLA Health-check for DIA from CE VRFs
#
# Internet traffic reaching (for e.g.) CE VRF BLUE must be sent either DIA via the inter-vrf link (egressing over BLUE_0
# in VRF BLUE then egressing Internet_1 in vrf_wan) or RIA over the H1_INET/H1_MPLS tunnels directly connected in VRF BLUE
#
# SLA Health-checks to Internet server 198.18.8.8 are sent over the tunnels, over BLUE_0 (vrf 3) and over Internet_1 (vrf_wan)
# The ping HC sent to 198.18.8.8 from vrf BLUE over BLUE_0 must egress over Internet_1 when it arrives in vrf_wan
# we don't want this HC to be sent over the tunnels (towards Hub) in vrf_wan
# when we originate this HC over BLUE_0 in vrf BLUE, we want it to measure Internet_1 quality in vrf_wan
# so this HC must unconditionally egress over Internet_1 once in vrf_wan
# A policy route is used to avoid cluttering the sdwan rule with such a "technical detail"
# If Internet_1 is down or it looses its route, then this HC will try to egress over the tunnels. It will fail because
# there is no FW policy allowing it. This is what we want: if Internet_1 fails then we want this HC to fail as well
# which is an indication that DIA for the BLUE/RED/YELLOW vrf is no longer possible: traffic must now egress RIA
# by sending the packets in the tunnels directly available in the vrf.

  config router policy
      edit 1
          set input-device "BLUE_0" "RED_0" "YELLOW_0"
          set src "10.254.254.0/255.255.255.0"
          set dst "198.18.8.8/255.255.255.255"
          set protocol 1
          set gateway {{wan.inet1.subnet}}.254
          set output-device "Internet_1"
          set comments "SLA Health-check for DIA from CE VRFs"
      next
  end
{% endif %}


# SD-WAN rules for Overlay:
# ------------------------
# rules 1 and 2 leverages AppCtrl routing while rule 3 has no AppCtrl
# during learning phase, rule 1 and 2 cannot be matched which means learning traffic hits rule 3
# and can get sent out members "111 122 133 14" depending on SLA conditions
# learning traffic will hit firewall policy 3 (Corporate Out) which has AppCtrl enabled
# and therefore allows to populate 5-tuple for appctrl isdb cache
#
# SD-WAN rules for Internet underlay:
# ----------------------------------
# rules 5 and 6 (members 1 2 133 233) leverage AppCtrl routing while rule 7 (members 1 2) has no AppCtrl
# during learning phase, rule 5 and 6 cannot be matched which means learning traffic hits rule 7
# and can get sent out members "1 2" (DIA) depending on SLA conditions
# learning traffic will hit firewall policy 2 (Internet DIA) which has AppCtrl enabled
# and therefore allows to populate 5-tuple for appctrl isdb cache
# subsequent traffic to dstip-dport in appctrl cache can hit sdwan rules 5 or 6 and can be sent out members "1 2 133 233"
# depending on SLA conditions and can be allowed by firewall policies 2 (Internet DIA) or 5 (Internet RIA)
# AppCtrl is enabled on firewall policy 5 (Internet RIA) because if all DIA Internet links go down
# then traffic will hit FIB (rule 7 is ignored) and will hit RIA FW policy 5.
# If no AppCtrl was configured on RIA FW policy 5 then all Internet traffic will be subject to regular FIB lookup
# and sdwan rules 5/6 (prefer H1_MPLS over H2_MPLS) would never be matched since 5-tuple would never be populated
#
# A rule of thumb could be: Enable AppCtrl on all FW policies which have egress interfaces that leverage AppCtrl routing at sdwan layer.
