{# This file is used to share jinja variables needed for SDWAN jinja template files #}
{# 'extends' statement is used in the other SDWAN jinja template files to access these common variables #}

# INET1 and INET2 are transport-group 1 ; MPLS is transport-group 2
#
# There is no IPsec continuity between WEST-DC1 and WEST-DC2 so if WEST-BR1 only has up tunnels with WEST-DC1 and
# WEST-BR2 only has up tunnels with WEST-DC2 then no traffic can flow between WEST-BR1 and WEST-BR2
# If a plaintext DCI interconnection is created between WEST-DC1 and WEST-DC2 (via vlan over port10 OOB) then traffic
# can flow between WEST-BR1 and WEST-BR2 but no shortcut offer is sent by Hub since traffic will leave IPsec
#
# If WEST-BR1 and WEST-BR2 both have up tunnels with WEST-DC1 and WEST-DC2 (whatever the SLA status) then initial data
# flows through IPsec only and WEST-DC1 sends shortcut-offer to WEST-BR1 (assuming initial data traffic is BR1->BR2)
# Let's assume WEST-BR1 select local overlay H1_INET1 with local underlay Internet_1 because of local SDWAN rule hit by initial traffic
# The remaining decision is to select the *underlay IP* of WEST-BR2 (Internet_1, Internet_2, MPLS) to which the shortcut
# negotiation must be initiated (SA_INIT_req)
# This is decided based on the info in the shortcut-reply (and periodic update) reported in "diag sys sdwan advpn-session"
# Even if there is no continuity between WEST-BR1/H1_INET1 and WEST-BR2/*H2*_INET1 it is possible to build a shortcut between
# these two overlays: WEST-BR1 will send a shortcut SA_INIT_req to the underlay IP@ of WEST-BR2 Internet1 (this IP is shared
# by H1_INET1 and H2_INET1 on WEST-BR2) and shortcut will get established between WEST-BR1/H1_INET1 and WEST-BR2/*H2*_INET1
#
# As a conclusion:
# - IPsec continuity is mandatory for triggering the shortcut-offer from Hub for initial data traffic
# - IPsec continuity is *NOT* mandatory for negotiation the shortcut itself, it can be negotiated between two overlays
#   with no continuity via Hubs so long as they belong to the same transport-group
# - Due to the above point, all Internet overlays are configured with the same transport-group even if there is no IPsec
#   continuity between all the corresponding overlays

{% set ipsec_overlays = [
    {'id': 111, 'interface': 'H1_INET1', 'cross_underlay': false, 'transport_group': 1, 'priority_in_sla':1, 'priority_out_sla':991, 'status': 'enable' },
    {'id': 122, 'interface': 'H1_INET2', 'cross_underlay': false, 'transport_group': 1, 'priority_in_sla':1, 'priority_out_sla':991, 'status': 'enable'},
    {'id': 133, 'interface': 'H1_MPLS', 'cross_underlay': false, 'transport_group': 2, 'priority_in_sla':2, 'priority_out_sla':992, 'status': 'enable'},
    {'id': 211, 'interface': 'H2_INET1', 'cross_underlay': false, 'transport_group': 1, 'priority_in_sla':3, 'priority_out_sla':993, 'status': 'enable' if region == 'West' else 'disable' },
    {'id': 222, 'interface': 'H2_INET2', 'cross_underlay': false, 'transport_group': 1, 'priority_in_sla':3, 'priority_out_sla':993, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 233, 'interface': 'H2_MPLS', 'cross_underlay': false, 'transport_group': 2, 'priority_in_sla':4, 'priority_out_sla':994, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 112, 'interface': 'H1_INET1X2', 'cross_underlay': true, 'transport_group': 1, 'priority_in_sla':0, 'priority_out_sla':0, 'status': 'enable'},
    {'id': 121, 'interface': 'H1_INET2X1', 'cross_underlay': true, 'transport_group': 1, 'priority_in_sla':0, 'priority_out_sla':0, 'status': 'enable'},
    {'id': 212, 'interface': 'H2_INET1X2', 'cross_underlay': true, 'transport_group': 1, 'priority_in_sla':0, 'priority_out_sla':0, 'status': 'enable' if region == 'West' else 'disable'},
    {'id': 221, 'interface': 'H2_INET2X1', 'cross_underlay': true, 'transport_group': 1, 'priority_in_sla':0, 'priority_out_sla':0, 'status': 'enable' if region == 'West' else 'disable'},
    ]
-%}

{# SDWAN configuration from other jinja templates #}

{% block sdwan %}
{% endblock %}

{% block sdwan_vrf %}
{% endblock %}
