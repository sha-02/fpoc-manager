###############################################################################################################
# SD-WAN

{% extends "./sdwan.conf" %} {# shared jinja variables for SDWAN #}
{% block myconfig %}

# 'set hold-down-time 20' to prevent falling back to most-preferred shortcut before measuring its quality
#
# 'set tie-break fib-best-match' to select path with best-route to another shortcut instead of
# going back to feasible routes via Hub

##### SD-WAN zones -----------------------------------------------

config system sdwan
    set status enable
    config zone
        edit "INTERNET"
        next
        edit "VPN"
        next
    end
end

##### SD-WAN members -----------------------------------------------

config system sdwan
    config members

        # Underlays
        edit 1
            set interface "{{wan.inet1.name}}"
            {{ "set gateway %s.254"%(wan.inet1.subnet) if not wan.inet1.dhcp }}
            set zone "INTERNET"
        next
        edit 2
            set interface "{{wan.inet2.name}}"
            {{ "set gateway %s.254"%(wan.inet2.subnet) if not wan.inet2.dhcp }}
            set zone "INTERNET"
        next

        # Overlays
        {% for member in ipsec_overlays %}
            {% if member.cross_underlay and not full_mesh_ipsec %}
                {% continue %}
            {% endif %}
            edit {{member.id}}
                set interface "{{member.interface}}"
                set zone "VPN"
                {{ "set source %s"%(loopback) if overlay == 'no_ip' }}
                set priority 10
                set status {{member.status}}
                set transport-group {{member.transport_group}}
                {{ "set priority-in-sla %d"%(member.priority_in_sla) if bidir_sdwan_bgp_priority == 'remote_sla_priority' }}
                {{ "set priority-out-sla %d"%(member.priority_out_sla) if bidir_sdwan_bgp_priority == 'remote_sla_priority' }}
            next
        {% endfor %}
    end
end

### SD-WAN health-checks -----------------------------------------------

{# Build the list of SLA members for each health-check #}

{# members for SLA_DataCenter #}
{% set sla_dc_members = [] -%} {# Must contain all overlay tunnels #}
{% for ov in ipsec_overlays -%}
    {% if ov.cross_underlay and not full_mesh_ipsec -%}
        {% continue -%}
    {% endif -%}

    {% do sla_dc_members.append(ov.id) -%}
{% endfor -%}

config system sdwan
    config health-check
        edit "SLA_DataCenters"
            set server 10.200.99.{{region_id}}
            set sla-fail-log-period 10
            set sla-pass-log-period 10
            set mos-codec g729
            set probe-timeout 1000
            set members {{ sla_dc_members|join(' ') }}
            {{ "set embed-measured-health enable" if bidir_sdwan_bgp_priority in ('remote_sla_metrics', 'remote_sla_priority', 'remote_sla_status') }}
            {{ "set sla-id-redistribute 1"  if bidir_sdwan_bgp_priority in ('remote_sla_priority', 'remote_sla_status') }}
            config sla
                edit 1
                    set link-cost-factor latency packet-loss
                    set latency-threshold 150
                    set packetloss-threshold 1
                next
                edit 2
                    set link-cost-factor mos
                    set mos-threshold "4.0"
                next
            end
        next
    end
end

{# members for SLA_Internet = Internet underlays + Tunnels if RIA #}

{% set sla_internet_members = [1, 2] -%}  {# Internet_1 and Internet_2 #}

{% for ov in ipsec_overlays -%} {# Add tunnels for RIA #}
    {% if 'MPLS' in ov.interface -%}
        {% do sla_internet_members.append(ov.id) -%}
    {% endif -%}
    {% if ov.cross_underlay and not full_mesh_ipsec -%}
        {% continue -%}
    {% endif -%}
{% endfor -%}

config system sdwan
    config health-check
        edit "SLA_Internet"
            set server "198.18.8.8"
            set sla-fail-log-period 10
            set sla-pass-log-period 10
            set probe-timeout 1000
            set members {{ sla_internet_members|join(' ') }}
            config sla
                edit 1
                    set latency-threshold 150
                    set jitter-threshold 30
                    set packetloss-threshold 2
                next
                edit 2
                    set latency-threshold 300
                    set jitter-threshold 50
                    set packetloss-threshold 5
                next
            end
        next
    end
end

### SD-WAN with ADVPN v2.0 -----------------------------------------------

config system sdwan
    config zone
        edit "VPN"
            set advpn-select enable
            set advpn-health-check "SLA_DataCenters"
        next
    end
end

### SD-WAN rules -----------------------------------------------

config system sdwan
    config service
        edit 1
            set name "DataCenters"
            set mode priority
            set src "Corporate"
            set internet-service enable
            set internet-service-custom "DC.Services"
            set health-check "SLA_DataCenters"
            set priority-members 111 122 133 211 222 233
            set link-cost-factor custom-profile-1
            set packet-loss-weight 95
            set latency-weight 5
            set hold-down-time 10
            set tie-break fib-best-match {# required to reach the correct DC LAN from a single rule #}
        next
        edit 2
            set name "DataCenters_MaxBW"
            set mode sla
            set load-balance enable
            set src "Corporate"
            set internet-service enable
            set internet-service-app-ctrl 7932 7931 7930
            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
            set priority-members 111 122
        next
        edit 3
            set name "DataCenters_VoiP_MOS"
            set mode sla
            set protocol 17
            set start-port 5061
            set end-port 5061
            set dst "DataCenters"
            set src "Corporate"
            set hold-down-time 20
            config sla
                edit "SLA_DataCenters"
                    set id 2
                next
            end
            set priority-members 133 111 122 233 211 222
            set tie-break fib-best-match {# required to reach the correct DC LAN from a single rule #}

            #  Traffic remains in the original session path if the path is within the SLA
            set sla-stickiness enable
        next
        # No fib-best-match for this Branch-to-Branch rule
        edit 4
            set name "Branches_VoiP_MOS"
            set mode sla
            set protocol 17
            set start-port 5061
            set end-port 5061
            set dst "Corporate"
            set src "Corporate"
            set hold-down-time 20
            config sla
                edit "SLA_DataCenters"
                    set id 2
                next
            end
            set priority-members 133 111 122 233 211 222

            #  Traffic remains in the original session path if the path is within the SLA
            set sla-stickiness enable
        next
        edit 5
            set name "Branches"
            set mode sla
            set dst "Corporate"
            set src "Corporate"

            set hold-down-time 20

            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
            set priority-members 111 122 133 211 222 233
        next
    end
end

# --- Internet rules

# rules 10 and 11 (High and Med prio) leverage AppCtrl routing while rule 12 (low prio) as no AppCtrl
# During learning phase, rules 10+11 cannot be matched which means learning traffic hits rule 12 (low prio)
# and is sent out members "1 2" (DIA, Internet_1 Internet_2) depending on SLA conditions
# learning traffic will hit firewall policy 2 (Internet DIA) which has AppCtrl enabled
# and therefore allows to populate 5-tuple for appctrl isdb cache
# subsequent traffic to dstip-dport in appctrl cache can hit sdwan rules 10+11 and can be sent out the right members
# and can be allowed by firewall policies 'Internet DIA' or 'Internet RIA'
# AppCtrl is enabled on firewall policy 'Internet RIA' because if all DIA Internet links go down then traffic will hit
# FIB (DIA sdwan rule 12 is ignored) and will policy 'Internet RIA'.
# If no AppCtrl was configured on policy 'Internet RIA' then all Internet traffic would be subject to regular FIB lookup
# and sdwan rules 10+11 would never be matched since 5-tuple would never be populated
#
# A rule of thumb could be:
# Enable AppCtrl on all FW policies which have egress interfaces that are involved with AppCtrl SDWAN rules
#
config system sdwan
    config service
        edit 10
            set name "Internet_HighPriority"
            set mode sla
            set src "Corporate"
            set internet-service enable
            set internet-service-app-ctrl 16354 42635
            config sla
                edit "SLA_Internet"
                    set id 1
                next
            end
            set priority-members 1 133 233 2
        next
        edit 11
            set name "Internet_MedPriority"
            set mode sla
            set src "Corporate"
            set internet-service enable
            set internet-service-app-ctrl 33182 41468 16920
            config sla
                edit "SLA_Internet"
                    set id 2
                next
            end
            set priority-members 1 2 133 233
        next
        edit 12
            set name "Internet_LowPriority"
            set mode manual
            set src "Corporate"
            set dst "all"
            set priority-members 2 1
        next
    end
end

{% endblock %}

