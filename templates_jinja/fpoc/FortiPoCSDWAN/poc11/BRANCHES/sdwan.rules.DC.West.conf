{% if region == 'West' %}
{% if remote_signaling == 'none' %}  {################################################################################}
# If no remote signaling is done then SNAT must be used to guarantee that the return traffic from the Core goes back to the origin Hub.
# Using SNAT implies that existing TCP sessions cannot be failed over from one Hub to the other.
# If this is an unacceptable condition then SNAT is not an option and “remote signaling” must be done instead.
#
# If the lack of failover for existing TCP sessions is acceptable:
#     • Best Quality rules (mode priority) are not possible.
#       With a ‘best quality’ rule like [H1_INET H2_INET] new sessions would go to either H1 or H2 depending on the best link.
#       It is not possible with SNAT on Hubs.
#
#     • Blackout-only is an option: all links to H1 must be sla-dead (ie, loss of routing) to move traffic over H2
#         ◦ [H1_INET, H1_MPLS min-link=0] followed by  [H2_INET, H2_MPLS]
#           The drawback is that new sessions will be created via H1 links even if all links to H1 are out-sla
#
#     • mode-sla brownout (includes blackout): a minimum of healthy link must exists to H1 to keep traffic to H1.
#         If there is not enough in-sla min-links to H1 then traffic moves to H2
#         ◦ [H1_INET1, H1_INET2, H1_MPLS, H2_INET1, H2_INET2, H2_MPLS]
#             If all links to H1 are out-sla then traffic moves to H2
#         ◦ [H1_INET1, H1_INET2, H1_MPLS min-link=2] followed by [H2_INET1, H2_INET2, H2_MPLS]
#             If less than two links are in-sla to H1 (only one link is in-sla) then traffic moves to H2
#
# This kind of strategy works great for new sessions but breaks existing sessions: we don’t want existing sessions to attempt moving
# from H1 to H2 when H1 links are out-sla, because the sessions will fail.
# A possible solution is to force sessions to stick to their original link (eg, H1_INET1 or H1_INET2, etc…) with “preserve-session-route”.
# This fixes one problem for existing sessions, they will stay on original Hub.
# But it creates sub-optimal behavior for new and existing sessions: they connect move to another link towards the same Hub
# if current link becomes out-sla.
#
# Because traffic is SNATed by H1/H2 to CORE then
# - only new TCP sessions can failover from H1_ links to H2_ links towards CORE
# - existing TCP sessions must continue flowing through the original Hub
#
# The approach taken here is *blackout-only failover*

config system sdwan
    config service
# Traffic for DC1, for CORE and for EAST-DC match this rule ("DC1.Services").
# DC1 is only accessible via HUB1 so DC1 traffic sticks to this rule by matching "DC1.Services" (unless all H1 links are dead)
# CORE is accessible via HUB1 and HUB2. Failover to HUB2 is blackout failover, not brownout. It fits well with SNAT to CORE.
# Traffic to EAST-DC is accessible via HUB1 and HUB2 but we also make it preferred via H1 and only failover via H2 as blackout failover
        edit 1
            set name "DataCenters_H1"
            {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC1, WEST-CORE and EAST-DC via HUB1 (SLA)"{%endif%}
            set mode sla
            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
            # Skip the rule only when all members are sla-dead
            set minimum-sla-meet-members 0
            set src "Corporate"
            set dst "DataCenters_H1"
            set priority-members 111 122 133
            # set hold-down-time 10
        next

# Traffic for DC2, for CORE and for EAST-DC match this rule ("DC2.Services")
# DC2 is only accessible via HUB2 so DC2 traffic sticks to this rule by matching "DC2.Services" (unless all H2 links are dead)
# Traffic for CORE and EAST-DC will match this rule only if rule #1 is skipped (all H1 links are sla-dead - blackout failover)
        edit 2
            set name "DataCenters_H2"
            {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC2 and blackout failover for WEST-CORE and EAST-DC via HUB2 (SLA)"{%endif%}
            set mode sla
            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
            # Skip the rule only when all members are sla-dead
            set minimum-sla-meet-members 0
            set src "Corporate"
            set dst "DataCenters_H2"
            set priority-members 211 222 233
            # set hold-down-time 10
        next

# Traffic to DC1 will reach this point if all H1 overlays are sla-dead (rule #1 is skipped),
#    traffic will hit rule #5 ('Branches'), will try to go out via H2 and will fail
# Traffic to DC2 will reach this point if all H2 overlays are sla-dead (rule #2 is skipped),
#    traffic will hit rule #5 ('Branches'), will try to go out via H1 and will fail
# Traffic for WEST-CORE and EAST-DC will reach this point if rule #1 and #2 were skipped which means that
# all H1 and H2 overlays are dead, so traffic will hit FIB and will be blocked by FW policy #1 (Deny Internet for private IPs)
    end {# sdwan service #}
end {# sdwan #}
{% endif %} {# remote_signaling == 'none' #}

{% if remote_signaling != 'none' %}
# We must carefully plan the SD-WAN rules on the Branch to control on which Hub new sessions are created:
# • we canNOT use ‘mode priority’ rules on the Branch to steer traffic to the Hubs
#    In priority rules sessions can be created either towards H1 or towards H2 depending on best link
#    but, because there is no SLA, the return path from the CORE cannot be based on the SLA status signaled to the CORE
# • we can only use ‘mode sla’ rules to steer the traffic to the Hubs
#   ◦ As of 7.6.4, ‘mode sla + tie-break priority’ allows to have SLA rules combined with Best Quality steering
# • we must use the same SLA Target on the rule as the SLA Target configured in the ‘sdwan neighbor’

{% if dualHub_failover == 'lowest-cost' %} {########################################################################}
config system sdwan
    config service
# Traffic for DC1, for DC2 and for CORE can match this rule ("DC.Services")
# Traffic is routed to either DC1 or DC2 based on 'fib-best-match'
# Traffic to CORE moves from H1 to H2 only after all links to H1 are out-sla.
# Existing sessions can move from H1 to H2
# because they are not SNATed by the Hub
# Same SLA Target is configured in 'sdwan neighbor'
        edit 1
            set name "DataCenters"
            set mode sla
            set src "Corporate"
            set internet-service enable
            set internet-service-custom "DC.Services"
            config sla
                edit "SLA_DataCenters"
                    set id 1
                next
            end
            set priority-members 111 122 133 211 222 233
            set tie-break fib-best-match
        next
    end
end
{% endif %}

{% if dualHub_failover == 'best-link' %} {#######################################################################}

{# Refine the best-link strategy #}
{% if FOS < 7_006_004  %}
    {% set best_link = 'mode-priority' %}
{% else %}
    {% set best_link = 'mode-sla-with-priority' %}
{% endif %}

config system sdwan
    config service
{% if best_link == 'mode-priority' %}
# Traffic for DC1, for CORE and for EAST-DC match this rule ("DataCenters_H1"). Best link is selected (mode priority).
# DC1 is only accessible via HUB1 so DC1 traffic sticks to this rule by matching "DataCenters_H1" (unless all H1 links are dead)
# CORE is accessible via HUB1 and HUB2. Failover to HUB2 is blackout failover, not brownout.
# Traffic to EAST-DC is accessible via HUB1 and HUB2 but we also make it preferred via H1 and only failover via H2
# as blackout failover
{% else %}
# Traffic for DC1, for CORE and for EAST-DC match this rule ("DC.Services")
# Traffic for DC2 is excluded from matching this "DC.Services" rule by "fib-best-match-force enable"
# Best link is selected (set tie-break priority) while still using SLA Target (mode sla)
# The same SLA Target is configured in 'sdwan neighbor'
# Traffic to CORE or EAST-DC moves from H1/rule1 to H2/rule2 only after all links to H1 are out-sla
# with "minimum-sla-meet-members 1" (brownout)
{% endif %}
        edit 1
            set name "DataCenters_H1_BQ"
            {% if best_link == 'mode-priority' %}
                # Best link selection
                set mode priority
                set health-check "SLA_DataCenters"
                {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC1, WEST-CORE and EAST-DC via HUB1 (Best Quality)"{%endif%}
                set dst "DataCenters_H1"
            {% else %}
                {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC1, WEST-CORE and EAST-DC via HUB1 (SLA + Best Link)"{%endif%}
                set mode sla
                config sla
                    edit "SLA_DataCenters"
                        set id 1
                    next
                end
                # Best link selection
                set tie-break priority
                # global fib-best match: only match this rule if at least one of its members has the fib best match
                set fib-best-match-force enable
                # Skip the rule when all members are out-sla
                set minimum-sla-meet-members 1
                set internet-service enable
                set internet-service-custom "DC.Services"
            {% endif %}
            set src "Corporate"
            set link-cost-factor custom-profile-1
            set priority-members 111 122 133
            set packet-loss-weight 95
            set latency-weight 5
            # set hold-down-time 10
        next

{% if best_link == 'mode-priority'%}
# Traffic for DC2, for CORE and for EAST-DC match this rule ("DataCenters_H2"). Best link is selected (mode priority).
# DC2 is only accessible via HUB2 so DC2 traffic sticks to this rule by matching "DataCenters_H2" (unless all H2 links are dead)
# Traffic for CORE and EAST-DC will match this rule only if rule #1 is skipped (all H1 links are sla-dead - blackout failover)
{% else %}
# Traffic for DC2, for CORE and for EAST-DC match this rule ("DC.Services")
# Traffic for DC1 is excluded from matching this "DC.Services" rule by "fib-best-match-force enable"
# Traffic for CORE and EAST-DC will match this rule only if rule #1 is skipped (all H1 links are sla-dead - blackout failover)
# Best link is selected (set tie-break priority) while still using SLA Target (mode sla)
# The same SLA Target is configured in 'sdwan neighbor'
{% endif %}
        edit 2
            set name "DataCenters_H2_BQ"
            {% if best_link == 'mode-priority' %}
                # Best link selection
                set mode priority
                set health-check "SLA_DataCenters"
                {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC2, WEST-CORE and EAST-DC via HUB2 (Best Quality)"{%endif%}
                set dst "DataCenters_H2"
            {% else %}
                {%if FOS >= 7_006_004%}set comment "Traffic to WEST-DC2 and blackout failover for WEST-CORE and EAST-DC via HUB2 (SLA + Best Link)"{%endif%}
                set mode sla
                config sla
                    edit "SLA_DataCenters"
                        set id 1
                    next
                end
                # Best link selection
                set tie-break priority
                # global fib-best match: only match this rule if at least one of its members has the fib best match
                set fib-best-match-force enable
                # Skip the rule when all members are out-sla
                set minimum-sla-meet-members 1
                set internet-service enable
                set internet-service-custom "DC.Services"
            {% endif %}
            set src "Corporate"
            set link-cost-factor custom-profile-1
            set priority-members 211 222 233
            set packet-loss-weight 95
            set latency-weight 5
            # set hold-down-time 10
        next

{% if best_link == 'mode-priority' %}
# Traffic to DC1 will reach this point if all H1 overlays are sla-dead (BQ rule #1 is skipped),
#    traffic will fail since there is no other alternative for WEST-DC1 than H1
# Traffic to DC2 will reach this point if all H2 overlays are sla-dead (BQ rule #2 is skipped),
#    traffic will fail since there is no other alternative for WEST-DC2 than H2
# Traffic for WEST-CORE and EAST-DC will reach this point if rule #1 and #2 were skipped which means that all H1 and H2 overlays
# are dead, traffic will fail
{% else %}
# Traffic to DC1 will reach this point if all H1 overlays are out-sla (SLA+BL rule #1 is skipped),
#   it must be directed to DC1 with fib-best-match
# Traffic to DC2 will reach this point if all H2 overlays are out-sla (SLA+BL rule #2 is skipped),
#   it must be directed to DC2 with fib-best-match
# Traffic for WEST-CORE and EAST-DC will reach this point if rule #1 and #2 were both skipped which means
# that all H1 and H2 overlays are out-sla
# WEST-CORE routing will point to DC1 so traffic to CORE must be forwarded to DC1
# If all H1 links go sla-dead then BGP with DC1 will fail causing DC1 to no longer advertising to WEST-CORE and CORE
# routing will point to DC2. So traffic must go to DC2
# All the above can be done with either the below manual rule #3 with fib-best-match or by matching rule #5 'Branches'
# Rule #3 is created for convenience but is disabled by default
        edit 3
            set status disable
            set name "DataCenters_FLBK"
            set src "Corporate"
            set internet-service enable
            set internet-service-custom "DC.Services"
            set priority-members 111 122 133 211 222 233
            set tie-break fib-best-match
            {%if FOS >= 7_006_004%}set comment "Fallback when H1 and H2 overlays are out-sla or sla-dead"{%endif%}
        next

{% endif %}

    end
end
{% endif %} {# dualHub_failover == 'best-link' #}
{% endif %} {# remote_signaling != 'none' #}
{% endif %} {# WEST region #}
