{% if vrf_aware_overlay %}
{% extends "./routing.bgp.conf" %} {# shared jinja variables needed for BGP #}
{% block bgp_vrf %}
#
# VRF-aware overlay
#
# VRF {{vrf_pe}} is used as PE VRF to carry vpnv4 prefixes for the CE VRFs
{% if vrf_pe == vrf_blue -%}
# It is also used to carry IPv4 prefixes for port5 LAN which is in same VRF as the PE VRF
{% endif -%}
# For VPNv4 RD and RT we DO NOT use the local ASN, we use 65000 for all devices from all regions

# RD for Hubs
#
# 1064791/1069398 explains that using the same RD for two Hubs (in same region) is ok if they do not advertise the same subnet.
# If the two Hubs advertise the same subnet (eg, WEST-DC1 and WEST-DC2 learn common subnet 10.12.0.0/24 from DC) then, for such multi-homing setup, we must use different RDs for each Hub.
# This config pro-actively use different RDs for Hubs in same region just in case the final setup happens to be multi-homed
# The RD for first Hub (dc_id=1)  of the region is 65000:1000+vrfid
# The RD for second Hub (dc_id=2) of the region is 65000:2000+vrfid

config router bgp

    config neighbor-group
        edit "EDGE"
            set next-hop-self-vpnv4 enable
            set soft-reconfiguration-vpnv4 enable

            # Do not filter the regional BGP loopback summary (10.200.1.0/24) otherwise otherwise 10.0.0.0/8 is inactive
            # in the CE VRF of the branches (bug ???)
            unset route-map-out
#            set route-map-out-vpnv4 "EDGE_OUT"
        next
        edit "ADVPN_REGIONS"
            set next-hop-self-vpnv4 enable
            set soft-reconfiguration-vpnv4 enable
            set route-map-out-vpnv4 "LOCAL_LAN_ONLY"
        next
    end

    config neighbor
        {% for neighbor in neighbors -%}
            edit "{{neighbor}}"
                set route-map-in-vpnv4 "REGION_IN"
                set route-map-out-vpnv4 "REGION_OUT"
                set soft-reconfiguration-vpnv4 enable
                set next-hop-self-vpnv4 enable
            next
        {% endfor %}
    end

    config network
    {% for name, segment in vrf_segments.items() %}
        {% if name == "LAN" and FOS >= 7_006_000 %}  {# replace "LAN" by "LAN_BLUE" #}
            edit 1
                set prefix-name {{segment.alias}}
            next
        {% endif %}
        {% if name != "LAN" %}  {# skip the LAN which was defined in generic bgp config #}
            edit "{{10+loop.index0}}"
                {{ "set prefix "~segment.ipmask if FOS < 7_006_000 }}
                {{ "set prefix-name "~segment.alias if FOS >= 7_006_000 }}
                set route-map "SET_LOCAL_LAN"
            next
        {% endif %}
    {% endfor %}
    end

    config vrf
        edit "{{vrf_pe}}"
            set role pe
        next
        {% for segment in vrf_segments.values() %}
            {% if segment.vrfid != vrf_pe %}
                edit "{{segment.vrfid}}"
                    set role ce
                    set rd "65000:{{dc_id*1000 + segment.vrfid}}"
                    set export-rt "65000:{{segment.vrfid}}"
                    set import-rt "65000:{{segment.vrfid}}"
                next
            {% endif %}
        {% endfor %}
    end
end

{% endblock %} {# end of extension of 'router.bgp.conf' #}
{% endif %} {# vrf_aware_overlay #}
