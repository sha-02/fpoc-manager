{% if vrf_aware_overlay %}
# Interface updates for VRF

config system interface
    edit "{{wan.inet1.name}}"
        set vrf {{vrf_wan}}
    next
    edit "{{wan.inet2.name}}"
        set vrf {{vrf_wan}}
    next
    edit "{{wan.mpls1.name}}"
        set vrf {{vrf_wan}}
    next
    edit "{{lan.port}}"
        set vrf {{lan.vrfid}}
        set alias {{lan.alias}}
    next
    edit "lo-HC"
        set vrf {{vrf_pe}}
    next
    edit "lo-BGP"
        set vrf {{vrf_pe}}
    next
end

# LAN interfaces for the CE VRFs
config system interface
    {% for name, segment in vrf_segments.items() %}
        {% if name != "LAN" %}  {# LAN(SEG0/port5/lan.port) is already defined above with regular interfaces #}
        edit "{{segment.alias}}"
            set vdom "root"
            set vrf {{segment.vrfid}}
            set ip {{segment.ip}} {{segment.mask}}
            set allowaccess ping
            set role lan
            set interface "{{lan.port}}"
            set vlanid {{segment.vlanid}}
        next
        {% endif %}
    {% endfor %}
end

# Inter-VRF interfaces over vdom-link

{# Jinja namespace is used due to the scope of variables in Jinja 'for' loops #}
{# Inspired from: https://stackoverflow.com/questions/4870346/can-a-jinja-variables-scope-extend-beyond-in-an-inner-block #}
{% set npuvlink_vlanid = namespace(loop=1000) %} {# only used if npu on the FGT #}

config system interface
    {% for name, isegs in inter_segments.items() -%}
        {% for segment in isegs %}
            edit "{{name}}{{loop.index0}}"
                set vdom "root"
                set vrf {{segment.vrfid}}
                set ip {{segment.ip}} {{segment.mask}}
                set allowaccess ping

                {{ "set interface npu0_vlink%s"%(loop.index0) if npu }}
                {{ "set vlanid %d"%(npuvlink_vlanid.loop) if npu }}
            next
        {% endfor %}

        {% set npuvlink_vlanid.loop = npuvlink_vlanid.loop + 1 %}
    {% endfor -%}
end

{% endif %} {# VRF segmentation #}
