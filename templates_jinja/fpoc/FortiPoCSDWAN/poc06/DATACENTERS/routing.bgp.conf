###############################################################################################################
# BGP peerings

{# Define which ASN is for local region and which ASN is for the remote region #}
{%- if FOS >= 7_000_000 -%} {# FOS >= 7.0: always eBGP for cross-region #}
    {%- if region == 'West' -%}
        {%- set local_ASN  = 65012 -%}
        {%- set remote_ASN = 65003 -%}
    {%- else -%} {# East region #}
        {%- set local_ASN = 65003 -%}
        {%- set remote_ASN = 65012 -%}
    {%- endif -%}
{%- else -%} {# FOS 6.4 #}
    {%- if cross_region_advpn -%} {# inter-region shortcuts: iBGP is used between regions => same ASN for all regions #}
        {%- set local_ASN = 65000 -%}
        {%- set remote_ASN = 65000 -%}
    {%- else -%} {# no inter-region shortcut: eBGP between regions #}
        {%- if region == 'West' -%}
            {%- set local_ASN = 65012 -%}
            {%- set remote_ASN = 65003 -%}
        {%- else -%} {# East region #}
            {%- set local_ASN = 65003 -%}
            {%- set remote_ASN = 65012 -%}
        {%- endif -%}
    {%- endif -%}
{%- endif -%}

{%- if cross_region_advpn and FOS >= 7_000_000 -%}
{%- if region == 'West' -%}
# "additional-path-select 3" because
# - each Branch advertise its subnet with up to 3 different BGP NH
# - there are 3 overlays with DC3
{%- else -%} {# East region #}
# "additional-path-select 6" because
# - each Branch advertise its subnet with up to 3 different BGP NH
# - but there are 6 overlays with DC1/DC2: 6 different BGP NH can be received from BR1/BR2 via DC1/DC2
# The 6 BGP NH of BR1/BR2 must be sent to BR3 via each overlay. Hence "set adv-additional-path 6" for the edge peering
{%- endif -%}
{%- endif -%}

{%- if not cross_region_advpn and FOS >= 7_000_000 -%}
# "additional-path-select 3" because each Branch advertise its subnet with up to 3 different BGP NH
# No need for BGP NH preservation over inter-region peerings since there is no cross-region shortcut
{%- endif -%}

{%- if cross_region_advpn and FOS < 7_000_000 -%}
# TODO
{%- endif -%}

{%- if not cross_region_advpn and FOS < 7_000_000 -%}
# TODO
{%- endif %}

config router bgp
    set as {{local_ASN}}
    set router-id 10.{{dc_id}}.0.1
    set ibgp-multipath enable
    set additional-path enable

    {% if region == 'East' and cross_region_advpn %}
        set additional-path-select 6
    {% else %}
        set additional-path-select 3
    {% endif %}

    set keepalive-timer 10
    set holdtime-timer 30

    {% if cross_region_advpn and FOS >= 7_000_000 %}
        set ebgp-multipath enable
        set recursive-next-hop enable
        config aggregate-address
            edit 1
                set prefix 10.201.0.0 255.255.0.0
                set summary-only disable
            next
            edit 2
                set prefix 10.202.0.0 255.255.0.0
                set summary-only disable
            next
            edit 3
                set prefix 10.203.0.0 255.255.0.0
                set summary-only disable
            next
            edit 4
                set prefix 10.200.0.0 255.252.0.0
                set summary-only disable
            next
        end
    {% endif %}

    {% if not cross_region_advpn %}
        set ebgp-multipath enable
            config aggregate-address
                edit 1
                    set prefix 10.0.0.0 255.252.0.0
                next
                {% if FOS >= 7_000_000 %}
                    edit 2
                        set prefix 10.200.0.0 255.252.0.0
                        set summary-only enable
                    next
                {% endif %}
            end
    {% endif %}
    config neighbor {########################################## static neighbors #################################}
        {% if not cross_region_advpn and FOS >= 7_000_000 %}
            {% if region == 'West' %}
                {% set neighbors = ['10.200.3.3'] %}
            {% else %}
                {% set neighbors = ['10.200.1.1', '10.200.2.2'] %}
            {% endif %}

            {% for neighbor in neighbors %}
            edit "{{neighbor}}"
                set remote-as {{remote_ASN}}
                set ebgp-enforce-multihop enable
                set update-source "lo-BGP-REGION"

                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable
                set connect-timer 1

                set route-map-in "RM_REGION_IN"
                set route-map-out "RM_REGION_OUT"
            next
            {% endfor %}
        {% else %} {# (FOS7 with shortcut) or FOS 6.4 #}
            {% if region == 'West' %}
                {% set neighbors = [
                    {'ip': '10.201.'~dc_id~'3.2', 'interface': 'W'~dc_id~'E3_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.'~dc_id~'3.2', 'interface': 'W'~dc_id~'E3_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.'~dc_id~'3.2', 'interface': 'W'~dc_id~'E3_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    ]
                %}
            {% else %} {# East #}
                {% set neighbors = [
                    {'ip': '10.201.13.1', 'interface': 'W1E3_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.13.1', 'interface': 'W1E3_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.13.1', 'interface': 'W1E3_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    {'ip': '10.201.23.1', 'interface': 'W2E3_INET1', 'route_map': 'RM_REGION_INET1_OUT'},
                    {'ip': '10.202.23.1', 'interface': 'W2E3_INET2', 'route_map': 'RM_REGION_INET2_OUT'},
                    {'ip': '10.203.23.1', 'interface': 'W2E3_MPLS', 'route_map': 'RM_REGION_MPLS_OUT'},
                    ]
                %}
            {% endif %}
            {% for neighbor in neighbors %}
                 edit {{neighbor.ip}}
                    set interface "{{neighbor.interface}}"
                    set remote-as {{remote_ASN}}

                    {% if FOS >= 7_000_000 %}
                        set attribute-unchanged next-hop
                        set ebgp-enforce-multihop enable
                    {% endif %}

                    set advertisement-interval 1
                    set link-down-failover enable
                    set soft-reconfiguration enable
                    set connect-timer 1

                    {% if cross_region_advpn %}
                        set additional-path both
                        {% if region == 'East' %}
                            set adv-additional-path 6
                        {% else %}
                            set adv-additional-path 3
                        {% endif %}
                        set route-map-out "{{neighbor.route_map}}"
                    {% else %} {# no cross-region shortcuts #}
                        set route-map-in "RM_REGION_IN"
                        set route-map-out "RM_REGION_OUT"
                    {% endif %}
                next
            {% endfor %}
        {% endif %}
    end
    config neighbor-group {########################################## dynamic neighbors ##############################}
        {% set neighbors = [
            {'group': 'EDGE_INET1', 'interface': 'EDGE_INET1', 'route_map': 'RM_EDGE_INET1_OUT'},
            {'group': 'EDGE_INET2', 'interface': 'EDGE_INET2', 'route_map': 'RM_EDGE_INET2_OUT'},
            {'group': 'EDGE_MPLS', 'interface': 'EDGE_MPLS', 'route_map': 'RM_EDGE_MPLS_OUT'},
            ]
        %}
        {% for neighbor in neighbors %}
            edit "{{neighbor.group}}"
                set interface "{{neighbor.interface}}"
                set update-source "{{neighbor.interface}}"
                set remote-as {{local_ASN}}
                set additional-path send

                {% if region == 'East' and cross_region_advpn %}
                    set adv-additional-path 6
                {% else %}
                    set adv-additional-path 3
                {% endif %}

                set route-reflector-client enable
                set advertisement-interval 1
                set link-down-failover enable
                set soft-reconfiguration enable

                {% if cross_region_advpn %}
                    set route-map-out "{{neighbor.route_map}}"
                {% else %} {# no cross-region shortcuts #}
                    set route-map-out "RM_EDGE_OUT"
                {% endif %}
            next
        {% endfor %}
    end
    config neighbor-range
        edit 1
            set prefix 10.201.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET1"
        next
        edit 2
            set prefix 10.202.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_INET2"
        next
        edit 3
            set prefix 10.203.{{dc_id}}.0 255.255.255.0
            set neighbor-group "EDGE_MPLS"
        next
    end
    config network
        edit 1
            set prefix 10.{{dc_id}}.0.0 255.255.255.0
            {% if cross_region_advpn %}
                set route-map "RM_LOCAL_TAG"
            {% endif %}
        next
        {% if FOS >= 7_000_000 %}
            edit 2
                set prefix 10.201.{{dc_id}}.0 255.255.255.0
            next
            edit 3
                set prefix 10.202.{{dc_id}}.0 255.255.255.0
            next
            edit 4
                set prefix 10.203.{{dc_id}}.0 255.255.255.0
            next
        {% endif %}
    end
end

#
# BGP routes
#

{# =========================================================================================================== #}
{% if dc_id == 1 and FOS >= 7_000_000 and cross_region_advpn %}
# FGT-W-DC1 # alias bgp_rib
# Routing table for VRF=0
{% if FOS >= 7_000_004 %}
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive is directly connected, EDGE_INET1), 00:01:10
#                     [200/0] via 10.202.1.1 (recursive is directly connected, EDGE_INET2), 00:01:10
#                     [200/0] via 10.203.1.1 (recursive is directly connected, EDGE_MPLS), 00:01:10
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive is directly connected, EDGE_INET1), 00:01:10
#                     [200/0] via 10.202.1.2 (recursive is directly connected, EDGE_INET2), 00:01:10
#                     [200/0] via 10.203.1.2 (recursive is directly connected, EDGE_MPLS), 00:01:10
{% else %}
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive via EDGE_INET1 tunnel 10.201.1.1), 01:04:06
#                     [200/0] via 10.202.1.1 (recursive via EDGE_INET2 tunnel 10.202.1.1), 01:04:06
#                     [200/0] via 10.203.1.1 (recursive via EDGE_MPLS tunnel 10.203.1.1), 01:04:06
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive via EDGE_INET1 tunnel 10.201.1.2), 01:04:03
#                     [200/0] via 10.202.1.2 (recursive via EDGE_INET2 tunnel 10.202.1.2), 01:04:03
#                     [200/0] via 10.203.1.2 (recursive via EDGE_MPLS tunnel 10.203.1.2), 01:04:03
{% endif %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via W1E3_INET1 tunnel 100.64.21.3), 00:31:29
#                     [200/0] via 10.202.3.1 (recursive via W1E3_INET2 tunnel 100.64.22.3), 00:31:29
#                     [200/0] via 10.203.3.1 (recursive via W1E3_MPLS tunnel 10.0.24.3), 00:31:29
# B       10.3.0.0/24 [200/0] via 10.201.13.2 (recursive via W1E3_INET1 tunnel 100.64.21.3), 00:32:18
#                     [200/0] via 10.202.13.2 (recursive via W1E3_INET2 tunnel 100.64.22.3), 00:32:18
#                     [200/0] via 10.203.13.2 (recursive via W1E3_MPLS tunnel 10.0.24.3), 00:32:18
# B       10.200.0.0/14 [200/0] is a summary, Null, 01:03:59
# B       10.201.0.0/16 [200/0] is a summary, Null, 01:03:59
# B       10.201.3.0/24 [200/0] via 10.201.13.2 (recursive via W1E3_INET1 tunnel 100.64.21.3), 00:32:17
# B       10.202.0.0/16 [200/0] is a summary, Null, 01:03:59
# B       10.202.3.0/24 [200/0] via 10.202.13.2 (recursive via W1E3_INET2 tunnel 100.64.22.3), 00:32:17
# B       10.203.0.0/16 [200/0] is a summary, Null, 01:03:59
# B       10.203.3.0/24 [200/0] via 10.203.13.2 (recursive via W1E3_MPLS tunnel 10.0.24.3), 00:32:17
{% endif %}

{% if dc_id == 2 and FOS >= 7_000_000 and cross_region_advpn %}
# FGT-W-DC2 # alias bgp_rib
# Routing table for VRF=0
{% if FOS >= 7_000_004 %}
# B       10.0.1.0/24 [200/0] via 10.201.2.1 (recursive is directly connected, EDGE_INET1), 00:03:19
#                     [200/0] via 10.202.2.1 (recursive is directly connected, EDGE_INET2), 00:03:19
#                     [200/0] via 10.203.2.1 (recursive is directly connected, EDGE_MPLS), 00:03:19
# B       10.0.2.0/24 [200/0] via 10.201.2.2 (recursive is directly connected, EDGE_INET1), 00:03:20
#                     [200/0] via 10.202.2.2 (recursive is directly connected, EDGE_INET2), 00:03:20
#                     [200/0] via 10.203.2.2 (recursive is directly connected, EDGE_MPLS), 00:03:20
{% else %}
# B       10.0.1.0/24 [200/0] via 10.201.2.1 (recursive via EDGE_INET1 tunnel 10.201.2.1), 01:04:41
#                     [200/0] via 10.202.2.1 (recursive via EDGE_INET2 tunnel 10.202.2.1), 01:04:41
#                     [200/0] via 10.203.2.1 (recursive via EDGE_MPLS tunnel 10.203.2.1), 01:04:41
# B       10.0.2.0/24 [200/0] via 10.201.2.2 (recursive via EDGE_INET1 tunnel 10.201.2.2), 01:04:36
#                     [200/0] via 10.202.2.2 (recursive via EDGE_INET2 tunnel 10.202.2.2), 01:04:36
#                     [200/0] via 10.203.2.2 (recursive via EDGE_MPLS tunnel 10.203.2.2), 01:04:36
{% endif %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via W2E3_INET1 tunnel 100.64.21.3), 00:32:34
#                     [200/0] via 10.202.3.1 (recursive via W2E3_INET2 tunnel 100.64.22.3), 00:32:34
#                     [200/0] via 10.203.3.1 (recursive via W2E3_MPLS tunnel 10.0.24.3), 00:32:34
# B       10.3.0.0/24 [200/0] via 10.201.23.2 (recursive via W2E3_INET1 tunnel 100.64.21.3), 00:32:54
#                     [200/0] via 10.202.23.2 (recursive via W2E3_INET2 tunnel 100.64.22.3), 00:32:54
#                     [200/0] via 10.203.23.2 (recursive via W2E3_MPLS tunnel 10.0.24.3), 00:32:54
# B       10.200.0.0/14 [200/0] is a summary, Null, 01:04:34
# B       10.201.0.0/16 [200/0] is a summary, Null, 01:04:34
# B       10.201.3.0/24 [200/0] via 10.201.23.2 (recursive via W2E3_INET1 tunnel 100.64.21.3), 00:32:50
# B       10.202.0.0/16 [200/0] is a summary, Null, 01:04:34
# B       10.202.3.0/24 [200/0] via 10.202.23.2 (recursive via W2E3_INET2 tunnel 100.64.22.3), 00:32:50
# B       10.203.0.0/16 [200/0] is a summary, Null, 01:04:34
# B       10.203.3.0/24 [200/0] via 10.203.23.2 (recursive via W2E3_MPLS tunnel 10.0.24.3), 00:32:50
{% endif %}

{% if dc_id == 3 and FOS >= 7_000_000 and cross_region_advpn %}
# FGT-E-DC3 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:32:33
#                     [200/0] via 10.201.2.1 (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:32:33
#                     [200/0] via 10.202.1.1 (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:32:33
#                     [200/0] via 10.202.2.1 (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:32:33
#                     [200/0] via 10.203.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:32:33
#                     [200/0] via 10.203.2.1 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:32:33
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:32:33
#                     [200/0] via 10.201.2.2 (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:32:33
#                     [200/0] via 10.202.1.2 (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:32:33
#                     [200/0] via 10.202.2.2 (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:32:33
#                     [200/0] via 10.203.1.2 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:32:33
#                     [200/0] via 10.203.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:32:33
{% if FOS >= 7_000_004 %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive is directly connected, EDGE_INET1), 00:30:47
#                     [200/0] via 10.202.3.1 (recursive is directly connected, EDGE_INET2), 00:30:47
#                     [200/0] via 10.203.3.1 (recursive is directly connected, EDGE_MPLS), 00:30:47
{% else %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via EDGE_INET1 tunnel 10.201.3.1), 00:33:20
#                     [200/0] via 10.202.3.1 (recursive via EDGE_INET2 tunnel 10.202.3.1), 00:33:20
#                     [200/0] via 10.203.3.1 (recursive via EDGE_MPLS tunnel 10.203.3.1), 00:33:20
{% endif %}
# B       10.1.0.0/24 [200/0] via 10.201.13.1 (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:33:20
#                     [200/0] via 10.202.13.1 (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:33:20
#                     [200/0] via 10.203.13.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:33:20
# B       10.2.0.0/24 [200/0] via 10.201.23.1 (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:33:22
#                     [200/0] via 10.202.23.1 (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:33:22
#                     [200/0] via 10.203.23.1 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:33:22
# B       10.200.0.0/14 [200/0] is a summary, Null, 00:33:25
# B       10.201.0.0/16 [200/0] is a summary, Null, 00:33:25
# B       10.201.1.0/24 [200/0] via 10.201.13.1 (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:33:25
# B       10.201.2.0/24 [200/0] via 10.201.23.1 (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:33:22
# B       10.202.0.0/16 [200/0] is a summary, Null, 00:33:25
# B       10.202.1.0/24 [200/0] via 10.202.13.1 (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:33:23
# B       10.202.2.0/24 [200/0] via 10.202.23.1 (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:33:25
# B       10.203.0.0/16 [200/0] is a summary, Null, 00:33:25
# B       10.203.1.0/24 [200/0] via 10.203.13.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:33:20
# B       10.203.2.0/24 [200/0] via 10.203.23.1 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:33:25
{% endif %}

{# =========================================================================================================== #}

{% if dc_id == 1 and FOS >= 7_000_000 and not cross_region_advpn %}
# FGT-W-DC1 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:28:27
{% if FOS >= 7_000_004 %}
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive is directly connected, EDGE_INET1), 02:30:50
#                     [200/0] via 10.202.1.1 (recursive is directly connected, EDGE_INET2), 02:30:50
#                     [200/0] via 10.203.1.1 (recursive is directly connected, EDGE_MPLS), 02:30:50
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive is directly connected, EDGE_INET1), 02:30:49
#                     [200/0] via 10.202.1.2 (recursive is directly connected, EDGE_INET2), 02:30:49
#                     [200/0] via 10.203.1.2 (recursive is directly connected, EDGE_MPLS), 02:30:49
{% else %}
# B       10.0.1.0/24 [200/0] via 10.201.1.1 (recursive via EDGE_INET1 tunnel 10.201.1.1), 00:28:14
#                     [200/0] via 10.202.1.2 (recursive via EDGE_INET2 tunnel 10.202.1.2), 00:28:14
#                     [200/0] via 10.203.1.1 (recursive via EDGE_MPLS tunnel 10.203.1.1), 00:28:14
# B       10.0.2.0/24 [200/0] via 10.201.1.2 (recursive via EDGE_INET1 tunnel 10.201.1.2), 00:26:22
#                     [200/0] via 10.202.1.1 (recursive via EDGE_INET2 tunnel 10.202.1.1), 00:26:22
#                     [200/0] via 10.203.1.2 (recursive via EDGE_MPLS tunnel 10.203.1.2), 00:26:22
{% endif %}
# B       10.0.3.0/24 [20/0] via 10.200.3.3 (recursive via W1E3_MPLS tunnel 10.0.24.3), 00:28:14
#                                           (recursive via W1E3_INET1 tunnel 100.64.21.3), 00:28:14
#                                           (recursive via W1E3_INET2 tunnel 100.64.22.3), 00:28:14
# B       10.3.0.0/24 [20/0] via 10.200.3.3 (recursive via W1E3_MPLS tunnel 10.0.24.3), 00:28:14
#                                           (recursive via W1E3_INET1 tunnel 100.64.21.3), 00:28:14
#                                           (recursive via W1E3_INET2 tunnel 100.64.22.3), 00:28:14
# B       10.200.0.0/14 [200/0] is a summary, Null, 00:28:12
{% endif %}

{% if dc_id == 2 and FOS >= 7_000_000 and not cross_region_advpn %}
# FGT-W-DC2 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:31:42
{% if FOS >= 7_000_004 %}
# B       10.0.1.0/24 [200/0] via 10.201.2.1 (recursive is directly connected, EDGE_INET1), 02:32:50
#                     [200/0] via 10.202.2.1 (recursive is directly connected, EDGE_INET2), 02:32:50
#                     [200/0] via 10.203.2.1 (recursive is directly connected, EDGE_MPLS), 02:32:50
# B       10.0.2.0/24 [200/0] via 10.201.2.2 (recursive is directly connected, EDGE_INET1), 02:32:50
#                     [200/0] via 10.202.2.2 (recursive is directly connected, EDGE_INET2), 02:32:50
#                     [200/0] via 10.203.2.2 (recursive is directly connected, EDGE_MPLS), 02:32:50
{% else %}
# B       10.0.1.0/24 [200/0] via 10.201.2.1 (recursive via EDGE_INET1 tunnel 10.201.2.1), 00:31:34
#                     [200/0] via 10.202.2.1 (recursive via EDGE_INET2 tunnel 10.202.2.1), 00:31:34
#                     [200/0] via 10.203.2.1 (recursive via EDGE_MPLS tunnel 10.203.2.1), 00:31:34
# B       10.0.2.0/24 [200/0] via 10.201.2.2 (recursive via EDGE_INET1 tunnel 10.201.2.2), 00:27:39
#                     [200/0] via 10.202.2.2 (recursive via EDGE_INET2 tunnel 10.202.2.2), 00:27:39
#                     [200/0] via 10.203.2.2 (recursive via EDGE_MPLS tunnel 10.203.2.2), 00:27:39
{% endif %}
# B       10.0.3.0/24 [20/0] via 10.200.3.3 (recursive via W2E3_MPLS tunnel 10.0.24.3), 00:31:28
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.3), 00:31:28
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.3), 00:31:28
# B       10.3.0.0/24 [20/0] via 10.200.3.3 (recursive via W2E3_MPLS tunnel 10.0.24.3), 00:31:32
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.3), 00:31:32
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.3), 00:31:32
# B       10.200.0.0/14 [200/0] is a summary, Null, 00:31:27
{% endif %}

{% if dc_id == 3 and FOS >= 7_000_000 and not cross_region_advpn %}
# FGT-E-DC3 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:11:59
# B       10.0.1.0/24 [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:11:51
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:11:51
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:11:51
#                     [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:11:51
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:11:51
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:11:51
# B       10.0.2.0/24 [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:11:49
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:11:49
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:11:49
#                     [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:11:49
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:11:49
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:11:49
{% if FOS >= 7_000_004 %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive is directly connected, EDGE_INET1), 02:33:17
#                     [200/0] via 10.202.3.1 (recursive is directly connected, EDGE_INET2), 02:33:17
#                     [200/0] via 10.203.3.1 (recursive is directly connected, EDGE_MPLS), 02:33:17
{% else %}
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via EDGE_INET1 tunnel 10.201.3.1), 00:11:52
#                     [200/0] via 10.202.3.1 (recursive via EDGE_INET2 tunnel 10.202.3.1), 00:11:52
#                     [200/0] via 10.203.3.1 (recursive via EDGE_MPLS tunnel 10.203.3.1), 00:11:52
{% endif %}
# B       10.1.0.0/24 [20/0] via 10.200.1.1 (recursive via W1E3_MPLS tunnel 10.0.14.1), 00:11:51
#                                           (recursive via W1E3_INET1 tunnel 100.64.11.1), 00:11:51
#                                           (recursive via W1E3_INET2 tunnel 100.64.12.1), 00:11:51
# B       10.2.0.0/24 [20/0] via 10.200.2.2 (recursive via W2E3_MPLS tunnel 10.0.24.2), 00:11:51
#                                           (recursive via W2E3_INET1 tunnel 100.64.21.2), 00:11:51
#                                           (recursive via W2E3_INET2 tunnel 100.64.22.2), 00:11:51
# B       10.200.0.0/14 [200/0] is a summary, Null, 00:11:44
{% endif %}

{# =========================================================================================================== #}

{% if dc_id == 1 and FOS < 7_000_000 and cross_region_advpn %}
# FGT-W-DC1 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.1.0/24 [200/0] via 10.201.1.2, EDGE_INET1, 00:26:12
#                     [200/0] via 10.202.1.2, EDGE_INET2, 00:26:12
#                     [200/0] via 10.203.1.2, EDGE_MPLS, 00:26:12
# B       10.0.2.0/24 [200/0] via 10.201.1.1, EDGE_INET1, 00:26:13
#                     [200/0] via 10.202.1.1, EDGE_INET2, 00:26:13
#                     [200/0] via 10.203.1.1, EDGE_MPLS, 00:26:13
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via 10.201.13.2, W1E3_INET1), 00:26:12
#                     [200/0] via 10.202.3.1 (recursive via 10.202.13.2, W1E3_INET2), 00:26:12
#                     [200/0] via 10.203.3.1 (recursive via 10.203.13.2, W1E3_MPLS), 00:26:12
# B       10.3.0.0/24 [200/0] via 10.201.13.2, W1E3_INET1, 00:26:13
#                     [200/0] via 10.202.13.2, W1E3_INET2, 00:26:13
#                     [200/0] via 10.203.13.2, W1E3_MPLS, 00:26:13
#
# FGT-W-DC1 #
# FGT-W-DC1 # get router info routing-table static
# Routing table for VRF=0
# (...)
# S       10.201.3.0/24 [10/0] via 10.201.13.2, W1E3_INET1
# S       10.202.3.0/24 [10/0] via 10.202.13.2, W1E3_INET2
# S       10.203.3.0/24 [10/0] via 10.203.13.2, W1E3_MPLS
{% endif %}

{% if dc_id == 2 and FOS < 7_000_000 and cross_region_advpn %}
# FGT-W-DC2 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.1.0/24 [200/0] via 10.201.2.2, EDGE_INET1, 00:27:01
#                     [200/0] via 10.202.2.2, EDGE_INET2, 00:27:01
#                     [200/0] via 10.203.2.2, EDGE_MPLS, 00:27:01
# B       10.0.2.0/24 [200/0] via 10.201.2.1, EDGE_INET1, 00:27:02
#                     [200/0] via 10.202.2.1, EDGE_INET2, 00:27:02
#                     [200/0] via 10.203.2.1, EDGE_MPLS, 00:27:02
# B       10.0.3.0/24 [200/0] via 10.201.3.1 (recursive via 10.201.23.2, W2E3_INET1), 00:27:01
#                     [200/0] via 10.202.3.1 (recursive via 10.202.23.2, W2E3_INET2), 00:27:01
#                     [200/0] via 10.203.3.1 (recursive via 10.203.23.2, W2E3_MPLS), 00:27:01
# B       10.3.0.0/24 [200/0] via 10.201.23.2, W2E3_INET1, 00:27:01
#                     [200/0] via 10.202.23.2, W2E3_INET2, 00:27:01
#                     [200/0] via 10.203.23.2, W2E3_MPLS, 00:27:01
#
# FGT-W-DC2 #
# FGT-W-DC2 # get router info routing-table static
# Routing table for VRF=0
# (...)
# S       10.201.3.0/24 [10/0] via 10.201.23.2, W2E3_INET1
# S       10.202.3.0/24 [10/0] via 10.202.23.2, W2E3_INET2
# S       10.203.3.0/24 [10/0] via 10.203.23.2, W2E3_MPLS
{% endif %}

{% if dc_id == 3 and FOS < 7_000_000 and cross_region_advpn %}
# FGT-E-DC3 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.1.0/24 [200/0] via 10.201.1.2 (recursive via 10.201.13.1, W1E3_INET1), 00:29:03
#                     [200/0] via 10.201.2.2 (recursive via 10.201.23.1, W2E3_INET1), 00:29:03
#                     [200/0] via 10.202.1.2 (recursive via 10.202.13.1, W1E3_INET2), 00:29:03
#                     [200/0] via 10.202.2.2 (recursive via 10.202.23.1, W2E3_INET2), 00:29:03
#                     [200/0] via 10.203.1.2 (recursive via 10.203.13.1, W1E3_MPLS), 00:29:03
#                     [200/0] via 10.203.2.2 (recursive via 10.203.23.1, W2E3_MPLS), 00:29:03
# B       10.0.2.0/24 [200/0] via 10.201.1.1 (recursive via 10.201.13.1, W1E3_INET1), 00:29:04
#                     [200/0] via 10.201.2.1 (recursive via 10.201.23.1, W2E3_INET1), 00:29:04
#                     [200/0] via 10.202.1.1 (recursive via 10.202.13.1, W1E3_INET2), 00:29:04
#                     [200/0] via 10.202.2.1 (recursive via 10.202.23.1, W2E3_INET2), 00:29:04
#                     [200/0] via 10.203.1.1 (recursive via 10.203.13.1, W1E3_MPLS), 00:29:04
#                     [200/0] via 10.203.2.1 (recursive via 10.203.23.1, W2E3_MPLS), 00:29:04
# B       10.0.3.0/24 [200/0] via 10.201.3.1, EDGE_INET1, 00:29:04
#                     [200/0] via 10.202.3.1, EDGE_INET2, 00:29:04
#                     [200/0] via 10.203.3.1, EDGE_MPLS, 00:29:04
# B       10.1.0.0/24 [200/0] via 10.201.13.1, W1E3_INET1, 00:29:05
#                     [200/0] via 10.202.13.1, W1E3_INET2, 00:29:05
#                     [200/0] via 10.203.13.1, W1E3_MPLS, 00:29:05
# B       10.2.0.0/24 [200/0] via 10.201.23.1, W2E3_INET1, 00:29:04
#                     [200/0] via 10.202.23.1, W2E3_INET2, 00:29:04
#                     [200/0] via 10.203.23.1, W2E3_MPLS, 00:29:04
#
# FGT-E-DC3 #
# FGT-E-DC3 # get router info routing-table static
# Routing table for VRF=0
# (...)
# S       10.201.1.0/24 [10/0] via 10.201.13.1, W1E3_INET1
# S       10.201.2.0/24 [10/0] via 10.201.23.1, W2E3_INET1
# S       10.202.1.0/24 [10/0] via 10.202.13.1, W1E3_INET2
# S       10.202.2.0/24 [10/0] via 10.202.23.1, W2E3_INET2
# S       10.203.1.0/24 [10/0] via 10.203.13.1, W1E3_MPLS
# S       10.203.2.0/24 [10/0] via 10.203.23.1, W2E3_MPLS
{% endif %}

{# =========================================================================================================== #}

{% if dc_id == 1 and FOS < 7_000_000 and not cross_region_advpn %}
# FGT-W-DC1 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:07:20
# B       10.0.1.0/24 [200/0] via 10.201.1.1, EDGE_INET1, 00:07:13
#                     [200/0] via 10.202.1.2, EDGE_INET2, 00:07:13
#                     [200/0] via 10.203.1.1, EDGE_MPLS, 00:07:13
# B       10.0.2.0/24 [200/0] via 10.201.1.2, EDGE_INET1, 00:07:13
#                     [200/0] via 10.202.1.1, EDGE_INET2, 00:07:13
#                     [200/0] via 10.203.1.2, EDGE_MPLS, 00:07:13
# B       10.0.3.0/24 [20/0] via 10.202.13.2, W1E3_INET2, 00:07:13
#                     [20/0] via 10.203.13.2, W1E3_MPLS, 00:07:13
#                     [20/0] via 10.201.13.2, W1E3_INET1, 00:07:13
# B       10.3.0.0/24 [20/0] via 10.202.13.2, W1E3_INET2, 00:07:13
#                     [20/0] via 10.203.13.2, W1E3_MPLS, 00:07:13
#                     [20/0] via 10.201.13.2, W1E3_INET1, 00:07:13
#
# FGT-W-DC1 # get router info routing-table static
# Routing table for VRF=0
# (...)
# S       10.201.3.0/24 [10/0] via 10.201.13.2, W1E3_INET1
# S       10.202.3.0/24 [10/0] via 10.202.13.2, W1E3_INET2
# S       10.203.3.0/24 [10/0] via 10.203.13.2, W1E3_MPLS
{% endif %}

{% if dc_id == 2 and FOS < 7_000_000 and not cross_region_advpn %}
# FGT-W-DC2 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:09:34
# B       10.0.1.0/24 [200/0] via 10.201.2.2, EDGE_INET1, 00:09:27
#                     [200/0] via 10.202.2.2, EDGE_INET2, 00:09:27
#                     [200/0] via 10.203.2.2, EDGE_MPLS, 00:09:27
# B       10.0.2.0/24 [200/0] via 10.201.2.1, EDGE_INET1, 00:09:26
#                     [200/0] via 10.202.2.1, EDGE_INET2, 00:09:26
#                     [200/0] via 10.203.2.1, EDGE_MPLS, 00:09:26
# B       10.0.3.0/24 [20/0] via 10.203.23.2, W2E3_MPLS, 00:09:26
#                     [20/0] via 10.201.23.2, W2E3_INET1, 00:09:26
#                     [20/0] via 10.202.23.2, W2E3_INET2, 00:09:26
# B       10.3.0.0/24 [20/0] via 10.203.23.2, W2E3_MPLS, 00:09:26
#                     [20/0] via 10.201.23.2, W2E3_INET1, 00:09:26
#                     [20/0] via 10.202.23.2, W2E3_INET2, 00:09:26
#
# FGT-W-DC2 # get router info routing-table static
# Routing table for VRF=0
# (...)
# S       10.201.3.0/24 [10/0] via 10.201.23.2, W2E3_INET1
# S       10.202.3.0/24 [10/0] via 10.202.23.2, W2E3_INET2
# S       10.203.3.0/24 [10/0] via 10.203.23.2, W2E3_MPLS
{% endif %}

{% if dc_id == 3 and FOS < 7_000_000 and not cross_region_advpn %}
# FGT-E-DC3 # alias bgp_rib
# Routing table for VRF=0
# B       10.0.0.0/14 [200/0] is a summary, Null, 00:10:32
# B       10.0.1.0/24 [20/0] via 10.203.23.1, W2E3_MPLS, 00:10:25
#                     [20/0] via 10.201.23.1, W2E3_INET1, 00:10:25
#                     [20/0] via 10.203.13.1, W1E3_MPLS, 00:10:25
#                     [20/0] via 10.201.13.1, W1E3_INET1, 00:10:25
#                     [20/0] via 10.202.13.1, W1E3_INET2, 00:10:25
#                     [20/0] via 10.202.23.1, W2E3_INET2, 00:10:25
# B       10.0.2.0/24 [20/0] via 10.202.13.1, W1E3_INET2, 00:10:25
#                     [20/0] via 10.203.13.1, W1E3_MPLS, 00:10:25
#                     [20/0] via 10.201.13.1, W1E3_INET1, 00:10:25
#                     [20/0] via 10.201.23.1, W2E3_INET1, 00:10:25
#                     [20/0] via 10.202.23.1, W2E3_INET2, 00:10:25
#                     [20/0] via 10.203.23.1, W2E3_MPLS, 00:10:25
# B       10.0.3.0/24 [200/0] via 10.201.3.1, EDGE_INET1, 00:10:26
#                     [200/0] via 10.202.3.1, EDGE_INET2, 00:10:26
#                     [200/0] via 10.203.3.1, EDGE_MPLS, 00:10:26
# B       10.1.0.0/24 [20/0] via 10.202.13.1, W1E3_INET2, 00:10:26
#                     [20/0] via 10.203.13.1, W1E3_MPLS, 00:10:26
#                     [20/0] via 10.201.13.1, W1E3_INET1, 00:10:26
# B       10.2.0.0/24 [20/0] via 10.203.23.1, W2E3_MPLS, 00:10:25
#                     [20/0] via 10.201.23.1, W2E3_INET1, 00:10:25
#                     [20/0] via 10.202.23.1, W2E3_INET2, 00:10:25
#
# FGT-E-DC3 # get router info routing-table static
# Routing table for VRF=0
# (..)
# S       10.201.1.0/24 [10/0] via 10.201.13.1, W1E3_INET1
# S       10.201.2.0/24 [10/0] via 10.201.23.1, W2E3_INET1
# S       10.202.1.0/24 [10/0] via 10.202.13.1, W1E3_INET2
# S       10.202.2.0/24 [10/0] via 10.202.23.1, W2E3_INET2
# S       10.203.1.0/24 [10/0] via 10.203.13.1, W1E3_MPLS
# S       10.203.2.0/24 [10/0] via 10.203.23.1, W2E3_MPLS
{% endif %}
