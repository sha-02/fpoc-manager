###############################################################################################################
# Internet and OOB management interfaces

config system interface
    edit "{{wan.inet1.name}}"
        set vdom "root"
        {% if wan.inet1.dhcp %}
            set mode dhcp
            set defaultgw disable
            set dns-server-override disable
        {% else %}
            set mode static
            set ip {{wan.inet1.ipmask}}
        {% endif %}
        {% if wan.inet1.vlanid %}
            set type vlan
            set interface "{{wan.inet1.port}}"
            set vlanid {{wan.inet1.vlanid}}
        {% else %}
            set speed {{wan.inet1.speed}}
            set alias "Internet-1"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 100000
        set estimated-downstream-bandwidth 100000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{wan.inet2.name}}"
        set vdom "root"
        {% if wan.inet2.dhcp %}
            set mode dhcp
            set defaultgw disable
            set dns-server-override disable
        {% else %}
            set mode static
            set ip {{wan.inet2.ipmask}}
        {% endif %}
        {% if wan.inet2.vlanid %}
            set type vlan
            set interface "{{wan.inet2.port}}"
            set vlanid {{wan.inet2.vlanid}}
        {% else %}
            set speed {{wan.inet2.speed}}
            set alias "Internet-2"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 100000
        set estimated-downstream-bandwidth 100000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{wan.mpls1.name}}"
        set vdom "root"
        {% if wan.mpls1.dhcp %}
            set mode dhcp
            set defaultgw disable
            set dns-server-override disable
        {% else %}
            set mode static
            set ip {{wan.mpls1.ipmask}}
        {% endif %}
        {% if wan.mpls1.vlanid %}
            set type vlan
            set interface "{{wan.mpls1.port}}"
            set vlanid {{wan.mpls1.vlanid}}
        {% else %}
            set speed {{wan.mpls1.speed}}
            set alias "MPLS"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 100000
        set estimated-downstream-bandwidth 100000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{lan.port}}"
        set vdom "root"
        set mode static
        set ip {{lan.ip}} {{lan.mask}}
        set allowaccess ping
        set alias "LAN"
        set speed {{lan.speed}}
        set monitor-bandwidth enable
        {{ "set alias "~lan.alias if vrf_aware_overlay }}
        {{ "set vrf "~lan.vrfid if vrf_aware_overlay }}
    next
    edit "lo-BGP"
        set vdom "root"
        set ip {{loopback}} 255.255.255.255
        set allowaccess ping
        set type loopback
        set role wan
        {{ "set vrf "~vrf_pe if vrf_aware_overlay }}
    next
end

{% if vrf_aware_overlay %}

# LAN interfaces for the CE VRFs
config system interface
    {% for name, segment in vrf_segments.items() %}
        {% if name != "LAN" %}  {# LAN(SEG0/port5/lan.port) is already defined above with regular interfaces #}
        edit "{{segment.alias}}"
            set vdom "root"
            set vrf {{segment.vrfid}}
            set ip {{segment.ip}} {{segment.mask}}
            set allowaccess ping
            set role lan
            set interface "{{lan.port}}"
            set vlanid {{segment.vlanid}}
        next
        {% endif %}
    {% endfor %}
end

    {% if direct_internet_access %}

        # Inter-VRF interfaces over vdom-link for DIA

        {# Jinja namespace is used due to the scope of variables in Jinja 'for' loops #}
        {# Inspired from: https://stackoverflow.com/questions/4870346/can-a-jinja-variables-scope-extend-beyond-in-an-inner-block #}
        {% set npuvlink_vlanid = namespace(loop=1000) %}  {# only used if npu on the FGT #}

        config system interface
            {% for name, isegs in inter_segments.items() -%}
                {% for segment in isegs %}
                    edit "{{name}}{{loop.index0}}"
                        set vdom "root"
                        set vrf {{segment.vrfid}}
                        set ip {{segment.ip}} {{segment.mask}}
                        set allowaccess ping
                        {{ "set interface npu0_vlink%s"%(loop.index0) if npu }}
                        {{ "set vlanid %d"%(npuvlink_vlanid.loop) if npu }}
                    next
                {% endfor %}

                {% set npuvlink_vlanid.loop = npuvlink_vlanid.loop + 1 %}
            {% endfor -%}
        end

    {% endif %} {# direct_internet_access #}
{% endif %} {# vrf_aware_overlay #}
