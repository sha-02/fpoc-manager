###############################################################################################################
# Static routing

# MPLS underlay

config router static
    edit 1
        unset gateway
        unset device
        set dst {{wan.mpls_summary.network}}
        set device "{{wan.mpls1.name}}"
        {{ "set dynamic-gateway enable" if wan.mpls1.dhcp else "set gateway %s.254"%(wan.mpls1.subnet) }}
        set comment "MPLS underlay"
    next
end

# Static default-routes

# With BGP-on-loopback design, it is recommended to configure **default route** on the Spokes towards all the overlays
# 'remote_internet' is therefore ignored: default-route is always configured over all overlays

{% if not vrf_aware_overlay %}
  config router static
      edit 2
          set sdwan-zone "INTERNET" "VPN"
          set comment "Default-route via Internet and all overlays"
      next
  end

{% else %} {# VRF segmentation #}
config router static

    {% set internets = [
        { 'static_route_index': 2, 'interface': wan.inet1.name, 'dhcp': wan.inet1.dhcp },
        { 'static_route_index': 3, 'interface': wan.inet2.name, 'dhcp': wan.inet2.dhcp }
        ] -%}
    {% if remote_internet == 'none' -%}
        {% set ria_overlays = []  -%}
    {% endif -%}
    {% if remote_internet == 'mpls' -%}
        {% set ria_overlays = [
            { 'static_route_index': 4, 'interface': 'H1_MPLS' },
            { 'static_route_index': 5, 'interface': 'H2_MPLS' }
            ] -%}
    {% endif -%}
    {% if remote_internet == 'all' -%}
        {% set ria_overlays = [
            { 'static_route_index': 4, 'interface': 'H1_INET1' },
            { 'static_route_index': 5, 'interface': 'H1_INET2' },
            { 'static_route_index': 6, 'interface': 'H2_INET1' },
            { 'static_route_index': 7, 'interface': 'H2_INET2' },
            { 'static_route_index': 8, 'interface': 'H1_MPLS' },
            { 'static_route_index': 9, 'interface': 'H2_MPLS' }
            ] -%}
    {% endif %}

# Since we are doing RIA for CE VRFs, we cannot use an sdwan default route: FOS refuses to create another default static
# route over a tunnel if there exists an sdwan static route over "INTERNET" zone
# So we need to individually create a default route over each underlay (internet access in vrf_wan)
# and, possibly (not sure), over each overlay tunnel (in vrf_pe)

# Default routes for the WAN VRF replacing the swan default route: set sdwan-zone "INTERNET" "VPN"
    {% for internet in internets %}
        edit {{internet.static_route_index}}
            set device "{{internet.interface}}"
            {{ "set dynamic-gateway enable" if internet.dhcp else "set gateway %s.254"%(internet.subnet) }}
            set priority 1
            set comment "VRF-{{vrf_wan}} default-route for Direct Internet Access (DIA)"
        next
    {% endfor %}

# Default routes for the PE VRF replacing the swan default route: set sdwan-zone "INTERNET" "VPN"
# If PE=32 with no CE VRF in VRF32, do we need a default route over the tunnels in VRF 32
# I don't think so
# DIA for the CE VRF will go through inter-vrf link
# and RIA for the CE VRF stays in the CE VRF itself by sending the RIA traffic over the multi-vrf tunnel in the CE VRF
# If, maybe, we need to create a default-route in PE VRF 32 it's because of transient state to accept packet from tunnel
# for the time being I'm not creating this default route. Let's adjust later if needed.

# Below code is commented because if BLUE VRF (seg0) is same as PE VRF, it's default route is created by the CE VRFs loop
# "Default routes for CE VRFs => RIA over the tunnels (index = 100+x)" because BLUE VRF belongs to vrf_segments
#
#    {% if vrf_blue == vrf_pe and remote_internet != 'none' %} {# BLUE_VRF is in same VRF as the PE VRF and needs RIA #}
#        {% for overlay in ria_overlays %}
#            edit {{overlay.static_route_index}}
#                set device "{{overlay.interface}}"
#                set priority 10
#                set comment "VRF-{{vrf_pe}} default-route for Remote Internet Access (RIA)"
#            next
#        {% endfor %}
#    {% endif %}


# Default routes for CE VRFs => RIA over the tunnels (index = 100+x)

    {# Jinja namespace is used due to the scope of variables in Jinja 'for' loops #}
    {# Inspired from: https://stackoverflow.com/questions/4870346/can-a-jinja-variables-scope-extend-beyond-in-an-inner-block #}
    {% set route = namespace(index=100) %}

        {% for seg in vrf_segments.values() %} {# for each VRF of each vrf_segments #}
            {% for overlay in ria_overlays %} {# create a default route over each MPLS tunnel #}
                edit {{route.index}}
                    set device "{{overlay.interface}}"
                    set vrf {{seg.vrfid}}
                    set distance 1
                    set comment "VRF-{{seg.vrfid}} default-route for Remote Internet Access (RIA)"
                next

                {% set route.index = route.index + 1 %}
            {% endfor %}
        {% endfor %}


    {% if direct_internet_access %}
# Default routes for the CE VRFs => DIA via the inter-vrf links to reach the Internet/WAN VRF (index = 10+x)
        {% for name, isegs in inter_segments.items() %}
            edit {{10+loop.index0}}
                set device "{{name}}1"
                set gateway {{isegs[0].ip}}
                # same distance as the SD-WAN default-route
                set distance 1
                set comment "VRF-{{isegs[1].vrfid}} default-route for Direct Internet Access (DIA)"
            next
        {% endfor %}
    {% endif %}

end {# config router static #}
{% endif %} {# VRF segmentation #}
