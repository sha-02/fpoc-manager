###############################################################################################################

#{% if region == 'West' %}
#    {% set remote_region = 'east' %}
#{% else %}
#    {% set remote_region = 'west' %}
#{% endif %}
{% set remote_region = 'REGIONS' %}

{% if br2br_routing != 'fib' %}
# When Hub routes traffic between one branch to another branch, or between one branch to remote region
# the Hub needs to pick up one of its available overlay towards the destination branch
  {% if br2br_routing == 'hub_side_steering' %}
# For this PoC, SLA is the tie-break. If traffic is received on INET1 but INET1 on egress is out-of-sla then Hub will
# pick-up another overlay to reach the destination Branch
  {% else %}
# For this PoC, keeping the same overlay is the tie-break. If traffic is received on EDGE_INET1 then Hubs forwards the
# packet to EDGE_INET1 of the destination Branch regardless of the SLA state of the link
  {% endif %}
{% endif %}

##### SD-WAN zones -----------------------------------------------

config system sdwan
    set status enable
    config zone
        edit "INTERNET"
        next
        edit "BRANCHES"
        next
        edit "{{remote_region}}"
        next
    end
end

##### SD-WAN members -----------------------------------------------

config system sdwan
    config members
        edit 1
            set interface "EDGE_INET1"
            set zone "BRANCHES"
        next
        edit 2
            set interface "EDGE_INET2"
            set zone "BRANCHES"
        next
        edit 3
            set interface "EDGE_MPLS"
            set zone "BRANCHES"
        next
        edit 4
            set interface "{{wan.inet1.name}}"
            {{ "set gateway %s.254"%(wan.inet1.subnet) if not wan.inet1.dhcp }}
            set zone "INTERNET"
        next
        edit 5
            set interface "{{wan.inet2.name}}"
            {{ "set gateway %s.254"%(wan.inet2.subnet) if not wan.inet2.dhcp }}
            set zone "INTERNET"
        next
        {% if region == 'West' %}
            edit 11
                set interface "EAST1_INET1"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 22
                set interface "EAST1_INET2"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 33
                set interface "EAST1_MPLS"
                set zone "{{remote_region}}"
                {{ "set transport-group 2" if cross_region_advpn and advpnv2 }}
            next
            {% if full_mesh_ipsec %}
                edit 12
                    set interface "EAST1_INET1X2"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
                edit 21
                    set interface "EAST1_INET2X1"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
            {% endif %}
        {% else %} {# East region #}
            edit 111
                set interface "WEST1_INET1"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 122
                set interface "WEST1_INET2"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 133
                set interface "WEST1_MPLS"
                set zone "{{remote_region}}"
                {{ "set transport-group 2" if cross_region_advpn and advpnv2 }}
            next
            edit 211
                set interface "WEST2_INET1"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 222
                set interface "WEST2_INET2"
                set zone "{{remote_region}}"
                {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
            next
            edit 233
                set interface "WEST2_MPLS"
                set zone "{{remote_region}}"
                {{ "set transport-group 2" if cross_region_advpn and advpnv2 }}
            next
            {% if full_mesh_ipsec %}
                edit 112
                    set interface "WEST1_INET1X2"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
                edit 121
                    set interface "WEST1_INET2X1"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
                edit 212
                    set interface "WEST2_INET1X2"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
                edit 221
                    set interface "WEST2_INET2X1"
                    set zone "{{remote_region}}"
                    {{ "set transport-group 1" if cross_region_advpn and advpnv2 }}
                next
            {% endif %}
        {% endif %}
    end
end

### SD-WAN health-checks -----------------------------------------------

config system sdwan
    config health-check
        edit "SLA_Internet"
            set server "198.18.8.8"
            set sla-fail-log-period 10
            set sla-pass-log-period 10
            set members 4 5
            config sla
                edit 1
                    set latency-threshold 150
                    set jitter-threshold 30
                    set packetloss-threshold 2
                next
            end
        next
        {% if bidir_sdwan == 'remote_sla' %}
            edit "SLA_EDGE"
                set detect-mode remote
                set sla-id-redistribute 1
                set members 1 2 3
                config sla
                    edit 1
                        set latency-threshold 150
                        set jitter-threshold 30
                        set packetloss-threshold 2
                        set priority-in-sla 11
                        set priority-out-sla 22
                    next
                end
            next
        {% endif %}
        {% if br2br_routing == 'hub_side_steering' %}
            # Ideally, SDWAN SLA steering between Hubs should be done only when cross-regional shortcuts are prohibited
            # (i.e., when inter-region traffic only flows between Hubs)
            edit {{ "SLA_EAST_INET" if region == 'West' else "SLA_WEST_INET" }}
                set server {{ "10.200.99.2" if region == 'West' else "10.200.99.1" }}
                set sla-fail-log-period 10
                set sla-pass-log-period 10
                {{ "set vrf "~vrf_pe if vrf_aware_overlay }}
                set source {{ "10.200.99.1" if region == 'West' else "10.200.99.2" }}
                {% if full_mesh_ipsec %}
                    set members {{ "11 12 22 21" if region == 'West' else "111 112 122 121 211 212 222 221" }}
                {% else %}
                    set members {{ "11 22" if region == 'West' else "111 122 211 222" }}
                {% endif %}
                config sla
                    edit 1
                        set latency-threshold 150
                        set jitter-threshold 30
                        set packetloss-threshold 2
                    next
                end
            next
        {% endif %}
    end
end

### SD-WAN with ADVPN v2.0 -----------------------------------------------

{% if cross_region_advpn and advpnv2 %}
    config system sdwan
        config health-check
            # For cross-regional branch-to-remoteRegionHub shortcuts
            edit "SLA_{{remote_region|upper}}"
                set server {{ "10.200.99.2" if region == 'West' else "10.200.99.1" }}
                set sla-fail-log-period 10
                set sla-pass-log-period 10
                {{ "set vrf "~vrf_pe if vrf_aware_overlay }}
                set source {{ "10.200.99.1" if region == 'West' else "10.200.99.2" }}
                {% if full_mesh_ipsec %}
                    set members {{ "11 12 22 21 33" if region == 'West' else "111 112 122 121 133 211 212 222 221 233" }}
                {% else %}
                    set members {{ "11 22 33" if region == 'West' else "111 122 133 211 222 233" }}
                {% endif %}
                config sla
                    edit 1
                        set latency-threshold 150
                        set jitter-threshold 30
                        set packetloss-threshold 2
                    next
                end
            next
        end
        config zone
            edit "{{remote_region}}"
                set advpn-select enable
                set advpn-health-check "SLA_{{remote_region|upper}}"
            next
        end
    end
{% endif %}

### SD-WAN rules -----------------------------------------------

config system sdwan
    config service
        {% if regional_advpn and br2br_routing != 'fib' %}
        #
        # BR->HUB->BR SDWAN steering for shortcut negotiation
        #
            edit 1
                set name "ADVPN_INET1_to_EDGE"
                set input-device "EDGE_INET1"
                set src "all"
                set dst "all"
                set priority-members 1 2 3
                {% if br2br_routing == 'hub_side_steering' %}
                    # we prefer using same overlay for shortcut (overlay stickiness) if it is in-sla (eg, INET1->INET1)
                    # but if INET1 is out-of-sla but INET2 is in-sla then we select INET2 (thx to fib-best-match) and create
                    # a cross-overlay shortcut (INET1->INET2)
                    set tie-break fib-best-match
                {% endif %}
            next
            edit 2
                set name "ADVPN_INET2_to_EDGE"
                set input-device "EDGE_INET2"
                set src "all"
                set dst "all"
                set priority-members 2 1 3
                {{ "set tie-break fib-best-match" if br2br_routing == 'hub_side_steering' }}
            next
            edit 3
                set name "ADVPN_MPLS_to_EDGE"
                set input-device "EDGE_MPLS"
                set src "all"
                set dst "all"
                set priority-members 3 1 2
                {{ "set tie-break fib-best-match" if br2br_routing == 'hub_side_steering' }}
            next
        {% endif %} {# regional_advpn #}
        {% if cross_region_advpn and br2br_routing != 'fib' %}
        #
        # BR->HUB->HUB->BR SDWAN steering for shortcut negotiation (cross-regional ADVPN allowed)
        #                      or for inter-region data traffic (no cross-regional ADVPN)
        #
            {% if region == 'West' %}
                edit 11
                    set name "ADVPN_EDGE_INET1_to_EAST"
                    set input-device "EDGE_INET1"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "11 21 22 12 33" if full_mesh_ipsec else "11 22 33" }}
                    {% if br2br_routing == 'hub_side_steering' %}
                        set mode sla
                        config sla
                            edit "SLA_EAST_INET"
                                set id 1
                            next
                        end
                        set tie-break fib-best-match
                    {% endif %}
                next
                edit 1  {# extend the sd-wan rule created previously #}
                    append input-device "EAST1_INET1" {{ "EAST1_INET1X2" if full_mesh_ipsec }}
                next
                edit 12
                    set name "ADVPN_EDGE_INET2_to_EAST"
                    set input-device "EDGE_INET2"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "22 12 21 11 33" if full_mesh_ipsec else "22 11 33" }}
                    {% if br2br_routing == 'hub_side_steering' %}
                        set mode sla
                        config sla
                            edit "SLA_EAST_INET"
                                set id 1
                            next
                        end
                        set tie-break fib-best-match
                    {% endif %}
                next
                edit 2 {# extend the sd-wan rule created previously #}
                    append input-device "EAST1_INET2" {{ "EAST1_INET2X1" if full_mesh_ipsec }}
                next
                edit 13
                    set name "ADVPN_EDGE_MPLS_to_EAST"
                    set input-device "EDGE_MPLS"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "33 11 21 22 12" if full_mesh_ipsec else "33 11 22" }}
                    {{ "set tie-break fib-best-match" if br2br_routing == 'hub_side_steering' }}
                next
                edit 3  {# extend the sd-wan rule created previously #}
                    append input-device "EAST1_MPLS"
                next
            {% else %} {# East region #}
                edit 11
                    set name "ADVPN_EDGE_INET1_to_WEST"
                    set input-device "EDGE_INET1"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "111 121 211 221 122 121 222 221 133 233" if full_mesh_ipsec else "111 211 122 222 133 233" }}
                    {% if br2br_routing == 'hub_side_steering' %}
                        set mode sla
                        config sla
                            edit "SLA_WEST_INET"
                                set id 1
                            next
                        end
                        set tie-break fib-best-match
                    {% endif %}
                next
                edit 1 {# extend the sd-wan rule created previously #}
                    append input-device "WEST1_INET1" "WEST2_INET1" {{ "WEST1_INET1X2 WEST2_INET1X2" if full_mesh_ipsec }}
                next
                edit 12
                    set name "ADVPN_EDGE_INET2_to_WEST"
                    set input-device "EDGE_INET2"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "122 121 222 221 111 112 211 212 133 233" if full_mesh_ipsec else "122 222 111 211 133 233" }}
                    {% if br2br_routing == 'hub_side_steering' %}
                        set mode sla
                        config sla
                            edit "SLA_WEST_INET"
                                set id 1
                            next
                        end
                        set tie-break fib-best-match
                    {% endif %}
                next
                edit 2 {# extend the sd-wan rule created previously #}
                    append input-device "WEST1_INET2" "WEST2_INET2" {{ "WEST1_INET2X1 WEST2_INET2X1" if full_mesh_ipsec }}
                next
                edit 13
                    set name "ADVPN_EDGE_MPLS_to_WEST"
                    set input-device "EDGE_MPLS"
                    set src "all"
                    set dst "all"
                    set priority-members {{ "133 233 111 121 211 221 122 121 222 221" if full_mesh_ipsec else "133 233 111 211 122 222" }}
                    {{ "set tie-break fib-best-match" if br2br_routing == 'hub_side_steering' }}
                next
                edit 3 {# extend the sd-wan rule created previously #}
                    append input-device "WEST1_MPLS" "WEST2_MPLS"
                next
            {% endif %} {# East region #}
        {% endif %} {# cross_region_advpn #}
        #
        # HUB->BR SDWAN steering
        #
        {% if bidir_sdwan == 'remote_sla' %}
            # Multiple ECMP BGP routes with priorities can exist to reach a Branch
            # We can use sd-wan rules to select whichever overlay we want to use
            # When an overlay is bad, its priority gets increased and this route/overlay is no longer eligible due to 'fib-best-match'
            # The combination of 'fib-best-match' and remote-sla provides same result as 'mode sla' rule with active probes
            edit 20
                set name "EDGE_VoIP"
                set mode manual
                set src "DataCenters"
                set dst "Corporate"
                set protocol 17
                set start-port 5061
                set end-port 5061
                set priority-members 3 1 2
                set tie-break fib-best-match
            next
            edit 21
                set name "EDGE"
                set mode manual
                set src "DataCenters"
                set dst "Corporate"
                set priority-members 1 2 3
                set tie-break fib-best-match
            next
        {% endif %}
        #
        # Internet steering: DIA from DC itself or RIA from Branches
        #
        edit 30
            set name "Internet"
            set mode sla
            set src "Corporate"
            # Restrict the dst to 'Internet' ('all' minus RFC1918 subnets) (defined in bootstrap config)
            # to ensure that this rule never catch anything else that traffic for Internet
            set dst "Internet"
            config sla
                edit "SLA_Internet"
                    set id 1
                next
            end
            set priority-members 4 5
        next
    end
end
