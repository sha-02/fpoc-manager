###############################################################################################################
# Internet and OOB management interfaces

{% set textualize = { 1: 'first', 2: 'second'} %}
{% set wan_dc = datacenter[region|lower][textualize[dc_id]] %}

# On the Hubs, DO NOT use the same loopback for BGP termination and as a health-check server for the Spokes
# Using the same loopback is not supported, because the healh-check routes are statically injected on the Spokes,
# remaining even when the respective overlay is dead.
# As a result, the BGP session will not be able to switchover to another overlay upon failure!

config system interface
    edit "{{wan.inet1.name}}"
        set vdom "root"
        set mode static
        set ip {{wan_dc.inet1.ipmask}}
        {% if wan.inet1.vlanid %}
            set type vlan
            set interface "{{wan.inet1.port}}"
            set vlanid {{wan.inet1.vlanid}}
        {% else %}
            set speed {{wan.inet1.speed}}
            set alias "Internet-1"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 100000
        set estimated-downstream-bandwidth 100000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{wan.inet2.name}}"
        set vdom "root"
        set mode static
        set ip {{wan_dc.inet2.ipmask}}
        {% if wan.inet2.vlanid %}
            set type vlan
            set interface "{{wan.inet2.port}}"
            set vlanid {{wan.inet2.vlanid}}
        {% else %}
            set speed {{wan.inet2.speed}}
            set alias "Internet-2"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 100000
        set estimated-downstream-bandwidth 100000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{wan.mpls1.name}}"
        set vdom "root"
        set mode static
        set ip {{wan_dc.mpls.ipmask}}
        {% if wan.mpls1.vlanid %}
            set type vlan
            set interface "{{wan.mpls1.port}}"
            set vlanid {{wan.mpls1.vlanid}}
        {% else %}
            set speed {{wan.mpls1.speed}}
            set alias "MPLS"
        {% endif %}
        set allowaccess ping
        set role wan
        set estimated-upstream-bandwidth 6000
        set estimated-downstream-bandwidth 6000
        set monitor-bandwidth enable
        {{ "set vrf "~vrf_wan if vrf_aware_overlay }}
    next
    edit "{{lan.port}}"
        set vdom "root"
        set mode static
        set ip {{lan.ip}} {{lan.mask}}
        set allowaccess ping
        set alias "DC"
        set speed {{lan.speed}}
        set role lan
        set monitor-bandwidth enable
        {{ "set alias "~lan.alias if vrf_aware_overlay }}
        {{ "set vrf "~lan.vrfid if vrf_aware_overlay }}
    next
    edit "lo-HC"
        set vdom "root"
        set ip 10.200.99.{{region_id}} 255.255.255.255
        set allowaccess ping
        set type loopback
        set role wan
        {{ "set vrf "~vrf_pe if vrf_aware_overlay }}
    next
    edit "lo-BGP"
        set vdom "root"
        set ip {{loopback}} 255.255.255.255
        set allowaccess ping
        set type loopback
        set role wan
        {{ "set vrf "~vrf_pe if vrf_aware_overlay }}
    next
end

{% if vrf_aware_overlay %}
config system interface
    # LAN interfaces for the CE VRFs
    {% for name, segment in vrf_segments.items() %}
        {% if name != "LAN" %}  {# LAN(SEG0/port5/lan.port) is already defined above with regular interfaces #}
        edit "{{segment.alias}}"
            set vdom "root"
            set vrf {{segment.vrfid}}
            set ip {{segment.ip}} {{segment.mask}}
            set allowaccess ping
            set role lan
            set interface "{{lan.port}}"
            set vlanid {{segment.vlanid}}
        next
        {% endif %}
    {% endfor %}

    # Inter-VRF interfaces over vdom-link
    {% for name, isegs in inter_segments.items() -%}
        {% for segment in isegs %}
            edit "{{name}}{{loop.index0}}"
                set vdom "root"
                set vrf {{segment.vrfid}}
                set ip {{segment.ip}} {{segment.mask}}
                set allowaccess ping
            next
        {% endfor %}
    {% endfor -%}
end
{% endif %}
