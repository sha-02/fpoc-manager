###############################################################################################################
# BGP peerings
#

{% extends "./routing.bgp.j2" %} {# shared jinja variables needed for BGP #}
{% block bgp_common %}

# Tag-based resolution ('merge') is required with this bgp-on-loopback design:
# (1) on DCs to which shortcuts can be established (branches from a remote region building shortcut to the DC),
#     in this PoC this scenario is only when cross_region_advpn is True
# (2) on DCs which can reach branches of a remote region via summary routes from multiple DCs of the remote region
#     in this PoC this is always True for EAST-DC1 because:
#     - without bgp_aggregation: regional loopback summaries are received from WEST-DC1/DC2
#     - with bgp_aggregation: regional LAN summaries are received from WEST-DC1/DC2
#     For WEST-DC1/DC2 this is never True because they connect to a single DC in EAST region
#
# For configuration simplification, tag-based resolution is always enabled on WEST-DC1/DC2, no attempt is made to only
# configure tag-based resolution when only cross_region_advpn is True

{% if bgp_aggregation %}
# Routes received from other regions (should be the region's summary) are marked as 'no-advertise' because they must
# not be re-advertised to Edges.
# Edges reach the remote regions via the corporate summary (10.0.0.0/8)
# Edges must also receive the subnets of their DCs (10.1.0.0/16 and 10.2.0.0/16 for West)
{% endif %}
{% if bgp_route_reflection and bgp_aggregation %} {# ADVPN for intra-region but not for inter-region #}
# as well as the subnets of the other branches of their own region
{% endif %}
{% if bgp_route_reflection and not bgp_aggregation %} {# ADVPN only for intra-region, not ADVPN for inter-region #}
# Edges must receive all the subnets of all the other branches from their own region and other regions
{% endif %}

config router route-map
    edit "REGION_IN"
        config rule
            edit 1
                set set-tag 1
                {{ "set set-community no-advertise" if bgp_aggregation }}
                set action permit
            next
        end
    next
    edit "REGION_IN2"
        config rule
            edit 1
                set set-tag 2
                {{ "set set-community no-advertise" if bgp_aggregation }}
                set action permit
            next
        end
    next
    edit "EDGE_OUT"
    next
    edit "REGION_OUT"
    next
end

config router bgp
    set as {{local_ASN}}
    set router-id {{loopback}}
    set keepalive-timer 15
    set holdtime-timer 45
    set ibgp-multipath enable
    set ebgp-multipath enable

    set recursive-next-hop enable
    set tag-resolve-mode merge

    {% if bidir_sdwan == 'remote_sla' %}
        set recursive-inherit-priority enable
    {% endif %}

    config neighbor
    {% for neighbor in neighbors -%}
        edit "{{neighbor.ip}}"
            set remote-as {{remote_ASN}}
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set ebgp-enforce-multihop enable

            set advertisement-interval 1
            set link-down-failover enable
            set soft-reconfiguration enable
            set connect-timer 1

            set route-map-in "{{neighbor.RM_in}}"
            set route-map-out "REGION_OUT"
        next
    {% endfor %}
    end

    config neighbor-group
        edit "EDGE"
            set interface "lo-BGP"
            set update-source "lo-BGP"
            set remote-as {{local_ASN}}
            set advertisement-interval 1
            set soft-reconfiguration enable
            set route-map-out "EDGE_OUT"
        next
    end

    config neighbor-range
        edit 1
            set prefix 10.200.{{region_id}}.0 255.255.255.0
            set neighbor-group "EDGE"
        next
    end
end

{% endblock %} {# end of extension of 'router.bgp.j2' #}
