###############################################################################################################
# IPsec

#
# Edge tunnels to Branches
#

{#
# WEST-DC1 dc_id = 1, WEST-DC2 dc_id = 2, EAST-DC1 dc_id = 1 , These are the relative DC ID within their region
# 'datacenter' contains an absolute ID for each DC across all Regions:
# WEST-DC1 HubID = 1, WEST-DC2 HubID = 2, EAST-DC1 HubID = 3, [EAST-DC1 HubID = 4]
#}
{% set textualize = { 1: 'first', 2: 'second'} %}
{% set hubid = datacenter[region|lower][textualize[dc_id]].id %}

{% if multicast %}
# PIM does not bind to unnumbered interfaces: overlay IP@ must exists on IPsec tunnels
{% if overlay == 'mode_cfg' %}
# overlay is set to 'mode-cfg' so a mode-cfg pool is used to assign IP@ to the EDGE tunnels
# For a given DC, the same pool is shared by all EDGE tunnels (EDGE_INET1, EDGE_INET2, ...).
# WEST-DC1 pool = 10.224.11.[1-239]
# WEST-DC2 pool = 10.224.12.[1-239]
# EAST-DC1 pool = 10.224.21.[1-239]
# Generic pool space is 10.224.<regionid><dcid>.[1-239]
#
# "dependent" shortcuts are mandatory with mode-cfg overlays (0778974/0793117)
{% endif %}
{% endif %}

{# phase1 info when there is no multicast #}
{% set phase1s = [
    { 'name': 'EDGE_INET1', 'interface': wan.inet1.name, 'network_id': hubid ~ '1', 'localid': name~"_INET1" },
    { 'name': 'EDGE_INET2', 'interface': wan.inet2.name, 'network_id': hubid ~ '2', 'localid': name~"_INET2" },
    { 'name': 'EDGE_MPLS', 'interface': wan.mpls1.name, 'network_id': hubid ~ '3', 'localid': name~"_MPLS" },
    ]
%}

{% set pool_base = '10.224.'~region_id~dc_id %}
{% if multicast and overlay == 'mode_cfg' %}
  # The same mode-cfg pool is used across all Edge IPsec interfaces

  config firewall address
      edit "pool_branches_ipsec"
          set type iprange
          set start-ip {{pool_base}}.1
          set end-ip {{pool_base}}.239
      next
  end

  {# The mask for the remote-ip on the Edge IPsec interfaces is set to /32 to avoid enabling 'subnet-overlap' #}
  {% set phase1s = [
      { 'name': 'EDGE_INET1', 'interface': wan.inet1.name, 'network_id': hubid ~ '1', 'localid': name~"_INET1",
          'ip': pool_base~'.251 255.255.255.255', 'remote_ip': pool_base~'.241 255.255.255.255' },
      { 'name': 'EDGE_INET2', 'interface': wan.inet2.name, 'network_id': hubid ~ '2', 'localid': name~"_INET2",
          'ip': pool_base~'.252 255.255.255.255', 'remote_ip': pool_base~'.242 255.255.255.255' },
      { 'name': 'EDGE_MPLS', 'interface': wan.mpls1.name, 'network_id': hubid ~ '3', 'localid': name~"_MPLS",
          'ip': pool_base~'.253 255.255.255.255', 'remote_ip': pool_base~'.243 255.255.255.255' },
      ]
  %}
{% endif %}

{% set overlay1 = '10.201.' ~ hubid %}
{% set overlay2 = '10.202.' ~ hubid %}
{% set overlay3 = '10.203.' ~ hubid %}
{% if multicast and overlay == 'static' %}
  {% set phase1s = [
      { 'name': 'EDGE_INET1', 'interface': wan.inet1.name, 'network_id': hubid ~ '1', 'localid': name~"_INET1",
          'ip': overlay1~'.254 255.255.255.255', 'remote_ip': overlay1~'.253 255.255.255.0' },
      { 'name': 'EDGE_INET2', 'interface': wan.inet2.name, 'network_id': hubid ~ '2', 'localid': name~"_INET2",
          'ip': overlay2~'.254 255.255.255.255', 'remote_ip': overlay2~'.253 255.255.255.0' },
      { 'name': 'EDGE_MPLS', 'interface': wan.mpls1.name, 'network_id': hubid ~ '3', 'localid': name~"_MPLS",
          'ip': overlay3~'.254 255.255.255.255', 'remote_ip': overlay3~'.253 255.255.255.0' },
      ]
  %}
{% endif %}


# The Hub must be able to detect link failures on Edge devices, in order to withdraw the loopback routes injected by exchange-ip-addrv4.
# Furthermore, for certain transition scenarios, it is important that the Hub detects such failures faster than other Edge devices
# (for example, those that had an active ADVPN shortcut towards the failed link).
# This will allow the Hub to quickly detect a failed overlay on a Spoke, to avoid resolving routes via dead overlays.
# Therefore, we enable DPD (on-idle) and we ensure that the DPD timers on Hubs are shorter than those on the Edge devices.

# Recommendations for optimizing failover are:
# - BGP timers longer than DPD
# - DPD on Hub is on-idle
# - DPD on Hub must be shorter than DPD on Branch


{% for phase1 in phase1s %}
    config vpn ipsec phase1-interface
        edit "{{phase1.name}}"
            set type dynamic
            set interface "{{phase1.interface}}"
            set ike-version 2
            set network-overlay enable
            set network-id {{phase1.network_id}}
            set peertype any
            set localid "{{phase1.localid}}"
            {{ "set exchange-fgt-device-id enable" if (FOS >= 7_002_006 and FOS < 7_004_000) or FOS >= 7_004_001 }} {# FOS 7.2.6+ or FOS 7.4.1+ #}
            set net-device disable
            set add-route disable
            {{ "set auto-discovery-sender enable" if regional_advpn }}
            {{ "set exchange-interface-ip enable" if not regional_advpn }}
            set exchange-ip-addr4 {{loopback}}
            set dpd on-idle
            set dpd-retrycount 2
            set dpd-retryinterval 5
            set psksecret {{phase1.network_id}}{{phase1.network_id}}{{phase1.network_id}}
            {% if multicast and overlay == 'mode_cfg' %}
                set mode-cfg enable
                set assign-ip-from name
                set ipv4-name "pool_branches_ipsec"
                set ipv4-netmask 255.255.255.0
            {% endif %}
            {{ "set encapsulation vpn-id-ipip" if vrf_aware_overlay }}
            {% if npu == 'NP6' %}
                set proposal aes128-sha256 aes128-sha1
            {% else %}
                set proposal aes128gcm-prfsha256 aes128-sha256 aes128-sha1
            {% endif %}
            set dhgrp 19 14
        next
    end

    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set phase1name "{{phase1.name}}"
            {% if npu == 'NP6' %}
                set proposal aes128-sha256 aes128-sha1
            {% else %}
                set proposal aes128gcm aes128-sha256 aes128-sha1
            {% endif %}
            set dhgrp 19 14
        next
    end

    {% if multicast %}
        config system interface
            edit "{{phase1.name}}"
                set ip {{phase1.ip}}
                set remote-ip {{phase1.remote_ip}}
                set allowaccess ping
            next
        end
    {% endif %}

    {% if vrf_aware_overlay %}
        config system interface
            edit "{{phase1.name}}"
                {{ "set vrf "~vrf_pe }}
            next
        end
    {% endif %}
{% endfor %}

{% if multicast and overlay == 'mode_cfg' %}
# 'remote-ip' with a /32 mask is configured on the EDGE_xxx interfaces to avoid enabling 'subnet-overlap'
# per my test (7.2.4), 'remote-ip' is needed otherwise multicast does not flow
# Static routes for this subnet over the Edge interfaces was initially added to avoid potential RPF failure for PIM neighboring
# but I don't think this is actually needed because, for inter-regions, I only configured /32 IP@ on the tunnels and
# multicast works fine. So I've disabled the static routes.

    config firewall address
        edit "subnet_branches_ipsec"
            set subnet {{pool_base}}.0 255.255.255.0
            set allow-routing enable
        next
    end

    config router static
        edit 251
            set dstaddr "subnet_branches_ipsec"
            set device "EDGE_INET1"
            set status disable
        next
        edit 252
            set dstaddr "subnet_branches_ipsec"
            set device "EDGE_INET2"
            set status disable
        next
        edit 253
            set dstaddr "subnet_branches_ipsec"
            set device "EDGE_MPLS"
            set status disable
        next
    end
{% endif %}
