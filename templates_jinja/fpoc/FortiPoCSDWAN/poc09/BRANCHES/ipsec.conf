###############################################################################################################
# IPsec

{% set overlay1 = '10.201' %}
{% set overlay2 = '10.202' %}
{% set overlay3 = '10.203' %}

{%- set dc1 = datacenter.first -%}
{%- set dc2 = datacenter.second -%}

{%- set phase1s = [
    {   'name': 'H1_INET1', 'interface': 'Internet_1', 'remote_gw': dc1.inet1, 'link_cost': 0,
        'networkid': dc1.id~'1', 'localid': name~'_INET1', 'status': 'up',
        'ip': overlay1~'.'~dc1.id~'.'~branch_id, 'remote_ip':overlay1~'.'~dc1.id~'.254', 'cross_underlay': false,
    },
    {   'name': 'H1_INET2', 'interface': 'Internet_2', 'remote_gw': dc1.inet2, 'link_cost': 5,
        'networkid': dc1.id~'2', 'localid': name~'_INET2', 'status': 'up',
        'ip': overlay2~'.'~dc1.id~'.'~branch_id, 'remote_ip':overlay2~'.'~dc1.id~'.254', 'cross_underlay': false,
    },
    {   'name': 'H1_MPLS', 'interface': 'MPLS', 'remote_gw': dc1.mpls, 'link_cost': 0,
        'networkid': dc1.id~'3', 'localid': name~'_MPLS', 'status': 'up',
        'ip': overlay3~'.'~dc1.id~'.'~branch_id, 'remote_ip':overlay3~'.'~dc1.id~'.254', 'cross_underlay': false,
    },
    {   'name': 'H2_INET1', 'interface': 'Internet_1', 'remote_gw': dc2.inet1, 'link_cost': 0,
        'networkid': dc2.id~'1', 'localid': name~'_INET1', 'status': 'up' if region == 'West' else 'down',
        'ip': overlay1~'.'~dc2.id~'.'~branch_id, 'remote_ip':overlay1~'.'~dc2.id~'.254', 'cross_underlay': false,
    },
    {   'name': 'H2_INET2', 'interface': 'Internet_2', 'remote_gw': dc2.inet2, 'link_cost': 5,
        'networkid': dc2.id~'2', 'localid': name~'_INET2', 'status': 'up' if region == 'West' else 'down',
        'ip': overlay2~'.'~dc2.id~'.'~branch_id, 'remote_ip':overlay2~'.'~dc2.id~'.254', 'cross_underlay': false,
    },
    {   'name': 'H2_MPLS', 'interface': 'MPLS', 'remote_gw': dc2.mpls, 'link_cost': 0,
        'networkid': dc2.id~'3', 'localid': name~'_MPLS', 'status': 'up' if region == 'West' else 'down',
        'ip': overlay3~'.'~dc2.id~'.'~branch_id, 'remote_ip':overlay3~'.'~dc2.id~'.254', 'cross_underlay': false,
    },
    ]
-%}

# localid on Branch is convenient since it is shown on IPsec monitor of DCs
{% if bidir_sdwan == 'remote_sla' %}
# Static overlay IP addresses must be used with 'remote-sla' to force the Hub adding an IKE route (with the priority)
# to reach the Branch. This IKE route is the BGP NH and its priority can be inherited by BGP
{% else %}
# "dependent" shortcuts are mandatory with mode-cfg overlays (0778974/0793117)
{% endif %}

{% if shortcut_routing == 'ipsec_selectors' %}
# 'add-route enable' to populate routes over shortcuts based on IPsec SA traffic selectors
# 'mode-cfg-allow-client-selector enable' to allow configuration of phase src-selectors with mode-cfg
{% endif %}

{%- for phase1 in phase1s %}
    config vpn ipsec phase1-interface
        edit "{{phase1.name}}"
            set interface "{{phase1.interface}}"
            set ike-version 2
            set network-overlay enable
            set network-id {{phase1.networkid}}
            set peertype any
            set localid "{{phase1.localid}}"
            {{ "set exchange-fgt-device-id enable" if (FOS >= 7_002_006 and FOS < 7_004_000) or FOS >= 7_004_001 }} {# FOS 7.2.6+ or FOS 7.4.1+ #}
            set net-device enable
            {{ "set auto-discovery-receiver enable" if regional_advpn }}
            {{ "set exchange-interface-ip enable" if not regional_advpn }}
            {{ "set exchange-ip-addr4 "~loopback if shortcut_routing == 'dynamic_bgp' }}
            {{ "set link-cost %s"%(phase1.link_cost) if FOS >= 7_002_001 }}

            {% if overlay == 'static' %}
              set mode-cfg disable
              set auto-discovery-shortcuts independent
            {% else %}
              set mode-cfg enable
              set auto-discovery-shortcuts dependent
            {% endif %}

            {% if shortcut_routing == 'ipsec_selectors' %}
              set add-route enable
              {{ "set mode-cfg-allow-client-selector enable" if overlay == 'mode_cfg' }}
            {% else %}
              set add-route disable
            {% endif %}

            set dpd on-idle
            set dpd-retryinterval 5
            set idle-timeout enable
            set idle-timeoutinterval 5
            set suite-b suite-b-gcm-128
            set remote-gw {{phase1.remote_gw}}
            set psksecret {{phase1.networkid}}{{phase1.networkid}}{{phase1.networkid}}
        next
    end

    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set phase1name "{{phase1.name}}"
            set keepalive enable  {# negotiation is automatically triggered by BGP session #}
        next
    end

    {% if shortcut_routing == 'ipsec_selectors' %}
    config vpn ipsec phase2-interface
        edit "{{phase1.name}}"
            set src-addr-type name
            set dst-addr-type name
            set src-name "LAN"
            set dst-name "all"
            set auto-negotiate enable {# for negotiation so that tunnel is ready for data traffic #}
        next
        {% if overlay == 'static' %}
        # phase2 for overlay IP is not created automatically for static overlay
          edit "!{{phase1.name}}"
              set phase1name "{{phase1.name}}"
              set keepalive enable  {# negotiation is automatically triggered by BGP session #}
              set src-subnet {{phase1.ip}} 255.255.255.255
              set dst-subnet 0.0.0.0 0.0.0.0
          next
        {% endif %}
    end
    {% endif %}

    config system interface
        edit "{{phase1.name}}"
            set status {{phase1.status}}
            set allowaccess ping
            {% if overlay == 'static' %}
              set ip {{phase1.ip}} 255.255.255.255
              set remote-ip {{phase1.remote_ip}} 255.255.255.0
            {% endif %}
        next
    end
{% endfor %}
